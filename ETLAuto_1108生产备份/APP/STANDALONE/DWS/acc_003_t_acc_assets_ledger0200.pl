#!/usr/bin/perl

use strict;     # Declare using Perl strict syntax
use DBI;        # If you are using other package, declare here

# ------------ Variable Section ------------
my ${AUTO_HOME} = $ENV{"AUTO_HOME"};

my ${WML_DB} = $ENV{"AUTO_WML_DB"};
if ( !defined(${WML_DB}) ) {
    ${WML_DB} = "WML";
}
my ${WTL_DB} = $ENV{"AUTO_WTL_DB"};
if ( !defined(${WTL_DB}) ) {
    ${WTL_DB} = "WTL";
}
my ${WMLVIEW_DB} = $ENV{"AUTO_WMLVIEW_DB"};
if ( !defined(${WMLVIEW_DB}) ) {
    ${WMLVIEW_DB} = "WMLVIEW";
}
my ${WTLVIEW_DB} = $ENV{"AUTO_WTLVIEW_DB"};
if ( !defined(${WTLVIEW_DB}) ) {
    ${WTLVIEW_DB} = "WTLVIEW";
}

my ${NULL_DATE} = "1900-01-02";
my ${MIN_DATE} = "1900-01-01";
my ${MAX_DATE} = "2100-12-31";

my ${LOGON_FILE} = "${AUTO_HOME}/etc/VERTICA_LOGON";
my ${LOGON_STR};
my ${CONTROL_FILE};
my ${TX_DATE};
my ${TX_DATE_YYYYMMDD};
my ${TX_MON_DAY_MMDD};

# ------------ VSQL function ------------
sub run_vsql_command
{
  #my $rc = open(VSQL, "${LOGON_STR}");
  my $rc = open(VSQL, "|vsql -h 22.224.65.171 -p 5433 -d CPCIMDB_TEST -U dwtrans -w dwtrans2016");

  unless ($rc) {
      print "Could not invoke VSQL command
";
      return -1;
  }

# ------ Below are VSQL scripts ----------
  print VSQL <<ENDOFINPUT;

\\set ON_ERROR_STOP on

--Step0:
DELETE FROM dw_sdata.ACC_003_T_ACC_ASSETS_LEDGER WHERE start_dt>=DATE('${TX_DATE_YYYYMMDD}');
UPDATE dw_sdata.ACC_003_T_ACC_ASSETS_LEDGER SET end_dt=DATE('2100-12-31') WHERE end_dt>=DATE('${TX_DATE_YYYYMMDD}') AND end_dt<>DATE('2100-12-31');

--Step1:
CREATE LOCAL TEMPORARY TABLE  T_14 ON COMMIT PRESERVE ROWS AS SELECT * FROM dw_sdata.ACC_003_T_ACC_ASSETS_LEDGER WHERE 1=0;

--Step2:
INSERT  INTO T_14 (
  ACC,
  SYS_CODE,
  CSTM_NAME,
  CONTRACT_NO,
  CURR_TYPE,
  ACC_INDEX,
  COMB_FLAG,
  COMB_NO,
  CSTM_TRADE,
  PRODUCT_TYPE,
  DEADLINE,
  COST_STAT,
  STAT,
  BAL,
  LST_BAL,
  LST_T_DATE,
  LST_TRAN_DATE,
  OP_INST,
  ACC_INST,
  OP_DATE,
  DLV_DATE,
  DUE_DATE,
  CLS_DATE,
  ITM_NO,
  CONTRACT_AMT,
  RET_FLAG,
  RET_DATE,
  RATE_TERM_NUM,
  INT_FLAG,
  FINE_RATIO,
  AMT_TREND,
  INT_FREE_FLAG,
  INT_FREE_TERM,
  DEINT_FLAG,
  DEINT_RATIO,
  STAGE_FLAG,
  MORTGAGE_FLAG,
  MORTGAGE_NO,
  MORT_ASSETS_FLAG,
  MORT_ASSETS_NO,
  ACC_OWNNER,
  COST_RATIO,
  BGN_AMORT_COST,
  END_AMORT_COST,
  ACC_SET,
  PEER_AREA,
  ASSETS_LVL,
  BOND_CREDIT_RATING,
  DEPOSIT_FLAG,
  OUT_FLAG,
  EXPAND_1,
  EXPAND_2,
  EXPAND_3,
  EXPAND_4,
  EXPAND_5,
  start_dt,
  end_dt)
SELECT
  N.ACC,
  N.SYS_CODE,
  N.CSTM_NAME,
  N.CONTRACT_NO,
  N.CURR_TYPE,
  N.ACC_INDEX,
  N.COMB_FLAG,
  N.COMB_NO,
  N.CSTM_TRADE,
  N.PRODUCT_TYPE,
  N.DEADLINE,
  N.COST_STAT,
  N.STAT,
  N.BAL,
  N.LST_BAL,
  N.LST_T_DATE,
  N.LST_TRAN_DATE,
  N.OP_INST,
  N.ACC_INST,
  N.OP_DATE,
  N.DLV_DATE,
  N.DUE_DATE,
  N.CLS_DATE,
  N.ITM_NO,
  N.CONTRACT_AMT,
  N.RET_FLAG,
  N.RET_DATE,
  N.RATE_TERM_NUM,
  N.INT_FLAG,
  N.FINE_RATIO,
  N.AMT_TREND,
  N.INT_FREE_FLAG,
  N.INT_FREE_TERM,
  N.DEINT_FLAG,
  N.DEINT_RATIO,
  N.STAGE_FLAG,
  N.MORTGAGE_FLAG,
  N.MORTGAGE_NO,
  N.MORT_ASSETS_FLAG,
  N.MORT_ASSETS_NO,
  N.ACC_OWNNER,
  N.COST_RATIO,
  N.BGN_AMORT_COST,
  N.END_AMORT_COST,
  N.ACC_SET,
  N.PEER_AREA,
  N.ASSETS_LVL,
  N.BOND_CREDIT_RATING,
  N.DEPOSIT_FLAG,
  N.OUT_FLAG,
  N.EXPAND_1,
  N.EXPAND_2,
  N.EXPAND_3,
  N.EXPAND_4,
  N.EXPAND_5,
  DATE('${TX_DATE_YYYYMMDD}'),
  DATE('2100-12-31')
FROM 
 (SELECT
  COALESCE(ACC, '' ) AS ACC ,
  COALESCE(SYS_CODE, '' ) AS SYS_CODE ,
  COALESCE(CSTM_NAME, '' ) AS CSTM_NAME ,
  COALESCE(CONTRACT_NO, '' ) AS CONTRACT_NO ,
  COALESCE(CURR_TYPE, '' ) AS CURR_TYPE ,
  COALESCE(ACC_INDEX, '' ) AS ACC_INDEX ,
  COALESCE(COMB_FLAG, '' ) AS COMB_FLAG ,
  COALESCE(COMB_NO, '' ) AS COMB_NO ,
  COALESCE(CSTM_TRADE, '' ) AS CSTM_TRADE ,
  COALESCE(PRODUCT_TYPE, '' ) AS PRODUCT_TYPE ,
  COALESCE(DEADLINE, '' ) AS DEADLINE ,
  COALESCE(COST_STAT, '' ) AS COST_STAT ,
  COALESCE(STAT, '' ) AS STAT ,
  COALESCE(BAL, 0 ) AS BAL ,
  COALESCE(LST_BAL, 0 ) AS LST_BAL ,
  COALESCE(LST_T_DATE, '' ) AS LST_T_DATE ,
  COALESCE(LST_TRAN_DATE, '' ) AS LST_TRAN_DATE ,
  COALESCE(OP_INST, '' ) AS OP_INST ,
  COALESCE(ACC_INST, '' ) AS ACC_INST ,
  COALESCE(OP_DATE, '' ) AS OP_DATE ,
  COALESCE(DLV_DATE, '' ) AS DLV_DATE ,
  COALESCE(DUE_DATE, '' ) AS DUE_DATE ,
  COALESCE(CLS_DATE, '' ) AS CLS_DATE ,
  COALESCE(ITM_NO, '' ) AS ITM_NO ,
  COALESCE(CONTRACT_AMT, 0 ) AS CONTRACT_AMT ,
  COALESCE(RET_FLAG, '' ) AS RET_FLAG ,
  COALESCE(RET_DATE, '' ) AS RET_DATE ,
  COALESCE(RATE_TERM_NUM, 0 ) AS RATE_TERM_NUM ,
  COALESCE(INT_FLAG, '' ) AS INT_FLAG ,
  COALESCE(FINE_RATIO, 0 ) AS FINE_RATIO ,
  COALESCE(AMT_TREND, '' ) AS AMT_TREND ,
  COALESCE(INT_FREE_FLAG, '' ) AS INT_FREE_FLAG ,
  COALESCE(INT_FREE_TERM, 0 ) AS INT_FREE_TERM ,
  COALESCE(DEINT_FLAG, '' ) AS DEINT_FLAG ,
  COALESCE(DEINT_RATIO, 0 ) AS DEINT_RATIO ,
  COALESCE(STAGE_FLAG, '' ) AS STAGE_FLAG ,
  COALESCE(MORTGAGE_FLAG, '' ) AS MORTGAGE_FLAG ,
  COALESCE(MORTGAGE_NO, '' ) AS MORTGAGE_NO ,
  COALESCE(MORT_ASSETS_FLAG, '' ) AS MORT_ASSETS_FLAG ,
  COALESCE(MORT_ASSETS_NO, '' ) AS MORT_ASSETS_NO ,
  COALESCE(ACC_OWNNER, '' ) AS ACC_OWNNER ,
  COALESCE(COST_RATIO, 0 ) AS COST_RATIO ,
  COALESCE(BGN_AMORT_COST, 0 ) AS BGN_AMORT_COST ,
  COALESCE(END_AMORT_COST, 0 ) AS END_AMORT_COST ,
  COALESCE(ACC_SET, '' ) AS ACC_SET ,
  COALESCE(PEER_AREA, '' ) AS PEER_AREA ,
  COALESCE(ASSETS_LVL, '' ) AS ASSETS_LVL ,
  COALESCE(BOND_CREDIT_RATING, '' ) AS BOND_CREDIT_RATING ,
  COALESCE(DEPOSIT_FLAG, '' ) AS DEPOSIT_FLAG ,
  COALESCE(OUT_FLAG, '' ) AS OUT_FLAG ,
  COALESCE(EXPAND_1, '' ) AS EXPAND_1 ,
  COALESCE(EXPAND_2, '' ) AS EXPAND_2 ,
  COALESCE(EXPAND_3, '' ) AS EXPAND_3 ,
  COALESCE(EXPAND_4, '' ) AS EXPAND_4 ,
  COALESCE(EXPAND_5, 0 ) AS EXPAND_5 
 FROM  dw_tdata.ACC_003_T_ACC_ASSETS_LEDGER_${TX_DATE_YYYYMMDD}) N
LEFT JOIN
 (SELECT 
  ACC ,
  SYS_CODE ,
  CSTM_NAME ,
  CONTRACT_NO ,
  CURR_TYPE ,
  ACC_INDEX ,
  COMB_FLAG ,
  COMB_NO ,
  CSTM_TRADE ,
  PRODUCT_TYPE ,
  DEADLINE ,
  COST_STAT ,
  STAT ,
  BAL ,
  LST_BAL ,
  LST_T_DATE ,
  LST_TRAN_DATE ,
  OP_INST ,
  ACC_INST ,
  OP_DATE ,
  DLV_DATE ,
  DUE_DATE ,
  CLS_DATE ,
  ITM_NO ,
  CONTRACT_AMT ,
  RET_FLAG ,
  RET_DATE ,
  RATE_TERM_NUM ,
  INT_FLAG ,
  FINE_RATIO ,
  AMT_TREND ,
  INT_FREE_FLAG ,
  INT_FREE_TERM ,
  DEINT_FLAG ,
  DEINT_RATIO ,
  STAGE_FLAG ,
  MORTGAGE_FLAG ,
  MORTGAGE_NO ,
  MORT_ASSETS_FLAG ,
  MORT_ASSETS_NO ,
  ACC_OWNNER ,
  COST_RATIO ,
  BGN_AMORT_COST ,
  END_AMORT_COST ,
  ACC_SET ,
  PEER_AREA ,
  ASSETS_LVL ,
  BOND_CREDIT_RATING ,
  DEPOSIT_FLAG ,
  OUT_FLAG ,
  EXPAND_1 ,
  EXPAND_2 ,
  EXPAND_3 ,
  EXPAND_4 ,
  EXPAND_5 
 FROM dw_sdata.ACC_003_T_ACC_ASSETS_LEDGER 
 WHERE END_DT = DATE('2100-12-31') ) T
ON N.ACC = T.ACC AND N.SYS_CODE = T.SYS_CODE
WHERE
(T.ACC IS NULL AND T.SYS_CODE IS NULL)
 OR N.CSTM_NAME<>T.CSTM_NAME
 OR N.CONTRACT_NO<>T.CONTRACT_NO
 OR N.CURR_TYPE<>T.CURR_TYPE
 OR N.ACC_INDEX<>T.ACC_INDEX
 OR N.COMB_FLAG<>T.COMB_FLAG
 OR N.COMB_NO<>T.COMB_NO
 OR N.CSTM_TRADE<>T.CSTM_TRADE
 OR N.PRODUCT_TYPE<>T.PRODUCT_TYPE
 OR N.DEADLINE<>T.DEADLINE
 OR N.COST_STAT<>T.COST_STAT
 OR N.STAT<>T.STAT
 OR N.BAL<>T.BAL
 OR N.LST_BAL<>T.LST_BAL
 OR N.LST_T_DATE<>T.LST_T_DATE
 OR N.LST_TRAN_DATE<>T.LST_TRAN_DATE
 OR N.OP_INST<>T.OP_INST
 OR N.ACC_INST<>T.ACC_INST
 OR N.OP_DATE<>T.OP_DATE
 OR N.DLV_DATE<>T.DLV_DATE
 OR N.DUE_DATE<>T.DUE_DATE
 OR N.CLS_DATE<>T.CLS_DATE
 OR N.ITM_NO<>T.ITM_NO
 OR N.CONTRACT_AMT<>T.CONTRACT_AMT
 OR N.RET_FLAG<>T.RET_FLAG
 OR N.RET_DATE<>T.RET_DATE
 OR N.RATE_TERM_NUM<>T.RATE_TERM_NUM
 OR N.INT_FLAG<>T.INT_FLAG
 OR N.FINE_RATIO<>T.FINE_RATIO
 OR N.AMT_TREND<>T.AMT_TREND
 OR N.INT_FREE_FLAG<>T.INT_FREE_FLAG
 OR N.INT_FREE_TERM<>T.INT_FREE_TERM
 OR N.DEINT_FLAG<>T.DEINT_FLAG
 OR N.DEINT_RATIO<>T.DEINT_RATIO
 OR N.STAGE_FLAG<>T.STAGE_FLAG
 OR N.MORTGAGE_FLAG<>T.MORTGAGE_FLAG
 OR N.MORTGAGE_NO<>T.MORTGAGE_NO
 OR N.MORT_ASSETS_FLAG<>T.MORT_ASSETS_FLAG
 OR N.MORT_ASSETS_NO<>T.MORT_ASSETS_NO
 OR N.ACC_OWNNER<>T.ACC_OWNNER
 OR N.COST_RATIO<>T.COST_RATIO
 OR N.BGN_AMORT_COST<>T.BGN_AMORT_COST
 OR N.END_AMORT_COST<>T.END_AMORT_COST
 OR N.ACC_SET<>T.ACC_SET
 OR N.PEER_AREA<>T.PEER_AREA
 OR N.ASSETS_LVL<>T.ASSETS_LVL
 OR N.BOND_CREDIT_RATING<>T.BOND_CREDIT_RATING
 OR N.DEPOSIT_FLAG<>T.DEPOSIT_FLAG
 OR N.OUT_FLAG<>T.OUT_FLAG
 OR N.EXPAND_1<>T.EXPAND_1
 OR N.EXPAND_2<>T.EXPAND_2
 OR N.EXPAND_3<>T.EXPAND_3
 OR N.EXPAND_4<>T.EXPAND_4
 OR N.EXPAND_5<>T.EXPAND_5
;

--Step3:
UPDATE dw_sdata.ACC_003_T_ACC_ASSETS_LEDGER P 
SET End_Dt=DATE('${TX_DATE_YYYYMMDD}')
FROM T_14
WHERE P.End_Dt=DATE('2100-12-31')
AND P.ACC=T_14.ACC
AND P.SYS_CODE=T_14.SYS_CODE
;

--Step4:
INSERT  INTO dw_sdata.ACC_003_T_ACC_ASSETS_LEDGER SELECT * FROM T_14;

COMMIT;

ENDOFINPUT

  close(VSQL);

  my $RET_CODE = $? >> 8;

  if ( $RET_CODE == 0 ) {
      return 0;
  }
  else {
      return 1;
  }
}

# ------------ main function ------------
sub main
{
   my $ret;
   open(LOGONFILE_H, "${LOGON_FILE}");
   ${LOGON_STR} = <LOGONFILE_H>;
   close(LOGONFILE_H);
   
   # Get the decoded logon string
   my($user,$passwd) = split(',',${LOGON_STR}); 
   #my $decodepasswd = `${AUTO_HOME}/bin/IceCode.exe -d "$passwd" "$user"`;                     
   #${LOGON_STR} = "|vsql -h 192.168.2.44 -p 5433 -d CPCIMDB_TEST -U ".$user." -w ".$decodepasswd;

   # Call vsql command to load data
   $ret = run_vsql_command();

   print "run_vsql_command() = $ret";
   return $ret;
}

# ------------ program section ------------
if ( $#ARGV < 0 ) {
   print "Usage: [perl 程序名 Control_File] (Control_File format: dir.jobnameYYYYMMDD or sysname_jobname_YYYYMMDD.dir) 
";
   print "
";
   exit(1);
}

# Get the first argument
${CONTROL_FILE} = $ARGV[0];

if (${CONTROL_FILE} =~/[0-9]{8}($|\.)/) {
   ${TX_DATE_YYYYMMDD} = substr($&,0,8);
}
else{
   print "Usage: [perl 程序名 Control_File] (Control_File format: dir.jobnameYYYYMMDD or sysname_jobname_YYYYMMDD.dir) 
";
   print "
";
   exit(1);
}

${TX_MON_DAY_MMDD} = substr(${TX_DATE_YYYYMMDD}, length(${TX_DATE_YYYYMMDD})-4,4);
${TX_DATE} = substr(${TX_DATE_YYYYMMDD}, 0, 4)."-".substr(${TX_DATE_YYYYMMDD}, 4, 2)."-".substr(${TX_DATE_YYYYMMDD}, 6, 2);
open(STDERR, ">&STDOUT");

my $ret = main();

exit($ret);
