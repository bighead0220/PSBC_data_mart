#!/usr/bin/perl

use strict;     # Declare using Perl strict syntax
use DBI;        # If you are using other package, declare here

# ------------ Variable Section ------------
my ${AUTO_HOME} = $ENV{"AUTO_HOME"};

my ${WML_DB} = $ENV{"AUTO_WML_DB"};
if ( !defined(${WML_DB}) ) {
    ${WML_DB} = "WML";
}
my ${WTL_DB} = $ENV{"AUTO_WTL_DB"};
if ( !defined(${WTL_DB}) ) {
    ${WTL_DB} = "WTL";
}
my ${WMLVIEW_DB} = $ENV{"AUTO_WMLVIEW_DB"};
if ( !defined(${WMLVIEW_DB}) ) {
    ${WMLVIEW_DB} = "WMLVIEW";
}
my ${WTLVIEW_DB} = $ENV{"AUTO_WTLVIEW_DB"};
if ( !defined(${WTLVIEW_DB}) ) {
    ${WTLVIEW_DB} = "WTLVIEW";
}

my ${NULL_DATE} = "1900-01-02";
my ${MIN_DATE} = "1900-01-01";
my ${MAX_DATE} = "2100-12-31";

my ${LOGON_FILE} = "${AUTO_HOME}/etc/VERTICA_LOGON";
my ${LOGON_STR};
my ${CONTROL_FILE};
my ${TX_DATE};
my ${TX_DATE_YYYYMMDD};
my ${TX_MON_DAY_MMDD};

# ------------ VSQL function ------------
sub run_vsql_command
{
  #my $rc = open(VSQL, "${LOGON_STR}");
  my $rc = open(VSQL, "|vsql -h 22.224.65.171 -p 5433 -d CPCIMDB_TEST -U dwtrans -w dwtrans2016");

  unless ($rc) {
      print "Could not invoke VSQL command
";
      return -1;
  }

# ------ Below are VSQL scripts ----------
  print VSQL <<ENDOFINPUT;

\\set ON_ERROR_STOP on

--Step0:
DELETE FROM dw_sdata.PCS_006_TB_AST_DEPOSITCER WHERE start_dt>=DATE('${TX_DATE_YYYYMMDD}');
UPDATE dw_sdata.PCS_006_TB_AST_DEPOSITCER SET end_dt=DATE('2100-12-31') WHERE end_dt>=DATE('${TX_DATE_YYYYMMDD}') AND end_dt<>DATE('2100-12-31');

--Step1:
CREATE LOCAL TEMPORARY TABLE  T_330 ON COMMIT PRESERVE ROWS AS SELECT * FROM dw_sdata.PCS_006_TB_AST_DEPOSITCER WHERE 1=0;

--Step2:
INSERT  INTO T_330 (
  ASSET_NAME,
  WHETHER_OURBANK,
  CERTIFICATE_LOGO,
  CERTIFICATE_NO,
  ACCOUNT,
  OPENING_BANK_NO,
  OPENING_BANK_NAME,
  DEPCER_VALUE,
  INTEREST_RATE,
  START_TIME,
  TERMINATON_DATE,
  TEMPSEARCHSUM,
  TRANSSUM,
  ACCOUNTNAME,
  STATE,
  REMOVESTOPPAYFLOWNO,
  LOCALDATE,
  LOCAL_TIME,
  ORGCODE,
  CHECKDATE,
  ORGSYSCODE,
  CARDFLAG,
  CREATE_TIME,
  DELFLAG,
  CURRENCY,
  DEPOSITSTATE,
  DEPOSITKIND,
  PRINTNUM,
  MORTGAGESUM,
  DESPOSITCREATEORG,
  STOPPAYDATE,
  STOPPAYORG,
  REMOVESTOPPAYDATE,
  REMARK,
  STOPPAYNUM,
  UPDATE_TIME,
  ASSET_ID,
  TRUNC_NO,
  TEMPSEARCHDATE,
  FLOWNO,
  start_dt,
  end_dt)
SELECT
  N.ASSET_NAME,
  N.WHETHER_OURBANK,
  N.CERTIFICATE_LOGO,
  N.CERTIFICATE_NO,
  N.ACCOUNT,
  N.OPENING_BANK_NO,
  N.OPENING_BANK_NAME,
  N.DEPCER_VALUE,
  N.INTEREST_RATE,
  N.START_TIME,
  N.TERMINATON_DATE,
  N.TEMPSEARCHSUM,
  N.TRANSSUM,
  N.ACCOUNTNAME,
  N.STATE,
  N.REMOVESTOPPAYFLOWNO,
  N.LOCALDATE,
  N.LOCAL_TIME,
  N.ORGCODE,
  N.CHECKDATE,
  N.ORGSYSCODE,
  N.CARDFLAG,
  N.CREATE_TIME,
  N.DELFLAG,
  N.CURRENCY,
  N.DEPOSITSTATE,
  N.DEPOSITKIND,
  N.PRINTNUM,
  N.MORTGAGESUM,
  N.DESPOSITCREATEORG,
  N.STOPPAYDATE,
  N.STOPPAYORG,
  N.REMOVESTOPPAYDATE,
  N.REMARK,
  N.STOPPAYNUM,
  N.UPDATE_TIME,
  N.ASSET_ID,
  N.TRUNC_NO,
  N.TEMPSEARCHDATE,
  N.FLOWNO,
  DATE('${TX_DATE_YYYYMMDD}'),
  DATE('2100-12-31')
FROM 
 (SELECT
  COALESCE(ASSET_NAME, '' ) AS ASSET_NAME ,
  COALESCE(WHETHER_OURBANK, '' ) AS WHETHER_OURBANK ,
  COALESCE(CERTIFICATE_LOGO, '' ) AS CERTIFICATE_LOGO ,
  COALESCE(CERTIFICATE_NO, '' ) AS CERTIFICATE_NO ,
  COALESCE(ACCOUNT, '' ) AS ACCOUNT ,
  COALESCE(OPENING_BANK_NO, '' ) AS OPENING_BANK_NO ,
  COALESCE(OPENING_BANK_NAME, '' ) AS OPENING_BANK_NAME ,
  COALESCE(DEPCER_VALUE, 0 ) AS DEPCER_VALUE ,
  COALESCE(INTEREST_RATE, 0 ) AS INTEREST_RATE ,
  COALESCE(START_TIME,DATE('4999-12-31') ) AS START_TIME ,
  COALESCE(TERMINATON_DATE,DATE('4999-12-31') ) AS TERMINATON_DATE ,
  COALESCE(TEMPSEARCHSUM, 0 ) AS TEMPSEARCHSUM ,
  COALESCE(TRANSSUM, 0 ) AS TRANSSUM ,
  COALESCE(ACCOUNTNAME, '' ) AS ACCOUNTNAME ,
  COALESCE(STATE, '' ) AS STATE ,
  COALESCE(REMOVESTOPPAYFLOWNO, '' ) AS REMOVESTOPPAYFLOWNO ,
  COALESCE(LOCALDATE, '' ) AS LOCALDATE ,
  COALESCE(LOCAL_TIME, '' ) AS LOCAL_TIME ,
  COALESCE(ORGCODE, '' ) AS ORGCODE ,
  COALESCE(CHECKDATE, '' ) AS CHECKDATE ,
  COALESCE(ORGSYSCODE, '' ) AS ORGSYSCODE ,
  COALESCE(CARDFLAG, '' ) AS CARDFLAG ,
  COALESCE(CREATE_TIME,'4999-12-31 00:00:00' ) AS CREATE_TIME ,
  COALESCE(DELFLAG, '' ) AS DELFLAG ,
  COALESCE(CURRENCY, '' ) AS CURRENCY ,
  COALESCE(DEPOSITSTATE, '' ) AS DEPOSITSTATE ,
  COALESCE(DEPOSITKIND, '' ) AS DEPOSITKIND ,
  COALESCE(PRINTNUM, '' ) AS PRINTNUM ,
  COALESCE(MORTGAGESUM, 0 ) AS MORTGAGESUM ,
  COALESCE(DESPOSITCREATEORG, '' ) AS DESPOSITCREATEORG ,
  COALESCE(STOPPAYDATE,DATE('4999-12-31') ) AS STOPPAYDATE ,
  COALESCE(STOPPAYORG, '' ) AS STOPPAYORG ,
  COALESCE(REMOVESTOPPAYDATE,DATE('4999-12-31') ) AS REMOVESTOPPAYDATE ,
  COALESCE(REMARK, '' ) AS REMARK ,
  COALESCE(STOPPAYNUM, '' ) AS STOPPAYNUM ,
  COALESCE(UPDATE_TIME,'4999-12-31 00:00:00' ) AS UPDATE_TIME ,
  COALESCE(ASSET_ID, '' ) AS ASSET_ID ,
  COALESCE(TRUNC_NO, 0 ) AS TRUNC_NO ,
  COALESCE(TEMPSEARCHDATE,DATE('4999-12-31') ) AS TEMPSEARCHDATE ,
  COALESCE(FLOWNO, '' ) AS FLOWNO 
 FROM  dw_tdata.PCS_006_TB_AST_DEPOSITCER_${TX_DATE_YYYYMMDD}) N
LEFT JOIN
 (SELECT 
  ASSET_NAME ,
  WHETHER_OURBANK ,
  CERTIFICATE_LOGO ,
  CERTIFICATE_NO ,
  ACCOUNT ,
  OPENING_BANK_NO ,
  OPENING_BANK_NAME ,
  DEPCER_VALUE ,
  INTEREST_RATE ,
  START_TIME ,
  TERMINATON_DATE ,
  TEMPSEARCHSUM ,
  TRANSSUM ,
  ACCOUNTNAME ,
  STATE ,
  REMOVESTOPPAYFLOWNO ,
  LOCALDATE ,
  LOCAL_TIME ,
  ORGCODE ,
  CHECKDATE ,
  ORGSYSCODE ,
  CARDFLAG ,
  CREATE_TIME ,
  DELFLAG ,
  CURRENCY ,
  DEPOSITSTATE ,
  DEPOSITKIND ,
  PRINTNUM ,
  MORTGAGESUM ,
  DESPOSITCREATEORG ,
  STOPPAYDATE ,
  STOPPAYORG ,
  REMOVESTOPPAYDATE ,
  REMARK ,
  STOPPAYNUM ,
  UPDATE_TIME ,
  ASSET_ID ,
  TRUNC_NO ,
  TEMPSEARCHDATE ,
  FLOWNO 
 FROM dw_sdata.PCS_006_TB_AST_DEPOSITCER 
 WHERE END_DT = DATE('2100-12-31') ) T
ON N.ASSET_ID = T.ASSET_ID
WHERE
(T.ASSET_ID IS NULL)
 OR N.ASSET_NAME<>T.ASSET_NAME
 OR N.WHETHER_OURBANK<>T.WHETHER_OURBANK
 OR N.CERTIFICATE_LOGO<>T.CERTIFICATE_LOGO
 OR N.CERTIFICATE_NO<>T.CERTIFICATE_NO
 OR N.ACCOUNT<>T.ACCOUNT
 OR N.OPENING_BANK_NO<>T.OPENING_BANK_NO
 OR N.OPENING_BANK_NAME<>T.OPENING_BANK_NAME
 OR N.DEPCER_VALUE<>T.DEPCER_VALUE
 OR N.INTEREST_RATE<>T.INTEREST_RATE
 OR N.START_TIME<>T.START_TIME
 OR N.TERMINATON_DATE<>T.TERMINATON_DATE
 OR N.TEMPSEARCHSUM<>T.TEMPSEARCHSUM
 OR N.TRANSSUM<>T.TRANSSUM
 OR N.ACCOUNTNAME<>T.ACCOUNTNAME
 OR N.STATE<>T.STATE
 OR N.REMOVESTOPPAYFLOWNO<>T.REMOVESTOPPAYFLOWNO
 OR N.LOCALDATE<>T.LOCALDATE
 OR N.LOCAL_TIME<>T.LOCAL_TIME
 OR N.ORGCODE<>T.ORGCODE
 OR N.CHECKDATE<>T.CHECKDATE
 OR N.ORGSYSCODE<>T.ORGSYSCODE
 OR N.CARDFLAG<>T.CARDFLAG
 OR N.CREATE_TIME<>T.CREATE_TIME
 OR N.DELFLAG<>T.DELFLAG
 OR N.CURRENCY<>T.CURRENCY
 OR N.DEPOSITSTATE<>T.DEPOSITSTATE
 OR N.DEPOSITKIND<>T.DEPOSITKIND
 OR N.PRINTNUM<>T.PRINTNUM
 OR N.MORTGAGESUM<>T.MORTGAGESUM
 OR N.DESPOSITCREATEORG<>T.DESPOSITCREATEORG
 OR N.STOPPAYDATE<>T.STOPPAYDATE
 OR N.STOPPAYORG<>T.STOPPAYORG
 OR N.REMOVESTOPPAYDATE<>T.REMOVESTOPPAYDATE
 OR N.REMARK<>T.REMARK
 OR N.STOPPAYNUM<>T.STOPPAYNUM
 OR N.UPDATE_TIME<>T.UPDATE_TIME
 OR N.TRUNC_NO<>T.TRUNC_NO
 OR N.TEMPSEARCHDATE<>T.TEMPSEARCHDATE
 OR N.FLOWNO<>T.FLOWNO
;

--Step3:
UPDATE dw_sdata.PCS_006_TB_AST_DEPOSITCER P 
SET End_Dt=DATE('${TX_DATE_YYYYMMDD}')
FROM T_330
WHERE P.End_Dt=DATE('2100-12-31')
AND P.ASSET_ID=T_330.ASSET_ID
;

--Step4:
INSERT  INTO dw_sdata.PCS_006_TB_AST_DEPOSITCER SELECT * FROM T_330;

COMMIT;

ENDOFINPUT

  close(VSQL);

  my $RET_CODE = $? >> 8;

  if ( $RET_CODE == 0 ) {
      return 0;
  }
  else {
      return 1;
  }
}

# ------------ main function ------------
sub main
{
   my $ret;
   open(LOGONFILE_H, "${LOGON_FILE}");
   ${LOGON_STR} = <LOGONFILE_H>;
   close(LOGONFILE_H);
   
   # Get the decoded logon string
   my($user,$passwd) = split(',',${LOGON_STR}); 
   #my $decodepasswd = `${AUTO_HOME}/bin/IceCode.exe -d "$passwd" "$user"`;                     
   #${LOGON_STR} = "|vsql -h 192.168.2.44 -p 5433 -d CPCIMDB_TEST -U ".$user." -w ".$decodepasswd;

   # Call vsql command to load data
   $ret = run_vsql_command();

   print "run_vsql_command() = $ret";
   return $ret;
}

# ------------ program section ------------
if ( $#ARGV < 0 ) {
   print "Usage: [perl 程序名 Control_File] (Control_File format: dir.jobnameYYYYMMDD or sysname_jobname_YYYYMMDD.dir) 
";
   print "
";
   exit(1);
}

# Get the first argument
${CONTROL_FILE} = $ARGV[0];

if (${CONTROL_FILE} =~/[0-9]{8}($|\.)/) {
   ${TX_DATE_YYYYMMDD} = substr($&,0,8);
}
else{
   print "Usage: [perl 程序名 Control_File] (Control_File format: dir.jobnameYYYYMMDD or sysname_jobname_YYYYMMDD.dir) 
";
   print "
";
   exit(1);
}

${TX_MON_DAY_MMDD} = substr(${TX_DATE_YYYYMMDD}, length(${TX_DATE_YYYYMMDD})-4,4);
${TX_DATE} = substr(${TX_DATE_YYYYMMDD}, 0, 4)."-".substr(${TX_DATE_YYYYMMDD}, 4, 2)."-".substr(${TX_DATE_YYYYMMDD}, 6, 2);
open(STDERR, ">&STDOUT");

my $ret = main();

exit($ret);
