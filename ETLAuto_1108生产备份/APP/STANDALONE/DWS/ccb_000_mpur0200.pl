#!/usr/bin/perl

use strict;     # Declare using Perl strict syntax
use DBI;        # If you are using other package, declare here

# ------------ Variable Section ------------
my ${AUTO_HOME} = $ENV{"AUTO_HOME"};

my ${WML_DB} = $ENV{"AUTO_WML_DB"};
if ( !defined(${WML_DB}) ) {
    ${WML_DB} = "WML";
}
my ${WTL_DB} = $ENV{"AUTO_WTL_DB"};
if ( !defined(${WTL_DB}) ) {
    ${WTL_DB} = "WTL";
}
my ${WMLVIEW_DB} = $ENV{"AUTO_WMLVIEW_DB"};
if ( !defined(${WMLVIEW_DB}) ) {
    ${WMLVIEW_DB} = "WMLVIEW";
}
my ${WTLVIEW_DB} = $ENV{"AUTO_WTLVIEW_DB"};
if ( !defined(${WTLVIEW_DB}) ) {
    ${WTLVIEW_DB} = "WTLVIEW";
}

my ${NULL_DATE} = "1900-01-02";
my ${MIN_DATE} = "1900-01-01";
my ${MAX_DATE} = "2100-12-31";

my ${LOGON_FILE} = "${AUTO_HOME}/etc/VERTICA_LOGON";
my ${LOGON_STR};
my ${CONTROL_FILE};
my ${TX_DATE};
my ${TX_DATE_YYYYMMDD};
my ${TX_MON_DAY_MMDD};

# ------------ VSQL function ------------
sub run_vsql_command
{
  #my $rc = open(VSQL, "${LOGON_STR}");
  my $rc = open(VSQL, "|vsql -h 22.224.65.171 -p 5433 -d CPCIMDB_TEST -U dwtrans -w dwtrans2016");

  unless ($rc) {
      print "Could not invoke VSQL command
";
      return -1;
  }

# ------ Below are VSQL scripts ----------
  print VSQL <<ENDOFINPUT;

\\set ON_ERROR_STOP on

--Step0:
DELETE FROM dw_sdata.CCB_000_MPUR WHERE start_dt>=DATE('${TX_DATE_YYYYMMDD}');
UPDATE dw_sdata.CCB_000_MPUR SET end_dt=DATE('2100-12-31') WHERE end_dt>=DATE('${TX_DATE_YYYYMMDD}') AND end_dt<>DATE('2100-12-31');

--Step1:
CREATE LOCAL TEMPORARY TABLE  T_97 ON COMMIT PRESERVE ROWS AS SELECT * FROM dw_sdata.CCB_000_MPUR WHERE 1=0;

--Step2:
INSERT  INTO T_97 (
  BANK,
  XACCOUNT,
  CARD_NBR,
  CARD_BIN,
  CARDHOLDER,
  MP_NUMBER,
  INP_DAY,
  INP_TIME,
  AUTH_CODE,
  MERCHANT,
  MICRO_REF,
  PRODUCT,
  PURCH_DAY,
  REACT_RESN,
  PROD_ID,
  INT_RATE,
  ACCEL_INT,
  ACCEL_RESN,
  CHECK_DIG,
  ISSUE_NBR,
  FIRST_INT,
  MTH_INSTL,
  INSTL_CNT,
  LST_INSTDY,
  MTH_INT,
  MTH_PPL,
  NBR_MTHS,
  ORIG_PURCH,
  REM_PPL,
  ORIG_INT,
  TOT_INT_CG,
  REM_INT,
  ORIG_FEE,
  REM_FEE,
  TRANS_SRC,
  STATUS_PRE,
  STATUS,
  STATUS_DAY,
  COMM_AMT,
  EMPLOYEE,
  FEE_FLAG,
  APP_SDAY,
  APP_SEQ,
  ADDR_TYPE,
  CREDP_ID,
  MP_TYPE,
  PAUSE_NBRS,
  DELAY_MTH,
  CURR_NUM,
  ADDR1,
  ADDR2,
  ADDR3,
  ADDR4,
  RES_PPL,
  INTER_MTHS,
  PAYCF_DAY,
  REMARK,
  INP_SRC,
  start_dt,
  end_dt)
SELECT
  N.BANK,
  N.XACCOUNT,
  N.CARD_NBR,
  N.CARD_BIN,
  N.CARDHOLDER,
  N.MP_NUMBER,
  N.INP_DAY,
  N.INP_TIME,
  N.AUTH_CODE,
  N.MERCHANT,
  N.MICRO_REF,
  N.PRODUCT,
  N.PURCH_DAY,
  N.REACT_RESN,
  N.PROD_ID,
  N.INT_RATE,
  N.ACCEL_INT,
  N.ACCEL_RESN,
  N.CHECK_DIG,
  N.ISSUE_NBR,
  N.FIRST_INT,
  N.MTH_INSTL,
  N.INSTL_CNT,
  N.LST_INSTDY,
  N.MTH_INT,
  N.MTH_PPL,
  N.NBR_MTHS,
  N.ORIG_PURCH,
  N.REM_PPL,
  N.ORIG_INT,
  N.TOT_INT_CG,
  N.REM_INT,
  N.ORIG_FEE,
  N.REM_FEE,
  N.TRANS_SRC,
  N.STATUS_PRE,
  N.STATUS,
  N.STATUS_DAY,
  N.COMM_AMT,
  N.EMPLOYEE,
  N.FEE_FLAG,
  N.APP_SDAY,
  N.APP_SEQ,
  N.ADDR_TYPE,
  N.CREDP_ID,
  N.MP_TYPE,
  N.PAUSE_NBRS,
  N.DELAY_MTH,
  N.CURR_NUM,
  N.ADDR1,
  N.ADDR2,
  N.ADDR3,
  N.ADDR4,
  N.RES_PPL,
  N.INTER_MTHS,
  N.PAYCF_DAY,
  N.REMARK,
  N.INP_SRC,
  DATE('${TX_DATE_YYYYMMDD}'),
  DATE('2100-12-31')
FROM 
 (SELECT
  COALESCE(BANK, 0 ) AS BANK ,
  COALESCE(XACCOUNT, 0 ) AS XACCOUNT ,
  COALESCE(CARD_NBR, '' ) AS CARD_NBR ,
  COALESCE(CARD_BIN, 0 ) AS CARD_BIN ,
  COALESCE(CARDHOLDER, 0 ) AS CARDHOLDER ,
  COALESCE(MP_NUMBER, 0 ) AS MP_NUMBER ,
  COALESCE(INP_DAY, 0 ) AS INP_DAY ,
  COALESCE(INP_TIME, 0 ) AS INP_TIME ,
  COALESCE(AUTH_CODE, '' ) AS AUTH_CODE ,
  COALESCE(MERCHANT, '' ) AS MERCHANT ,
  COALESCE(MICRO_REF, '' ) AS MICRO_REF ,
  COALESCE(PRODUCT, 0 ) AS PRODUCT ,
  COALESCE(PURCH_DAY, 0 ) AS PURCH_DAY ,
  COALESCE(REACT_RESN, '' ) AS REACT_RESN ,
  COALESCE(PROD_ID, '' ) AS PROD_ID ,
  COALESCE(INT_RATE, 0 ) AS INT_RATE ,
  COALESCE(ACCEL_INT, 0 ) AS ACCEL_INT ,
  COALESCE(ACCEL_RESN, '' ) AS ACCEL_RESN ,
  COALESCE(CHECK_DIG, 0 ) AS CHECK_DIG ,
  COALESCE(ISSUE_NBR, 0 ) AS ISSUE_NBR ,
  COALESCE(FIRST_INT, 0 ) AS FIRST_INT ,
  COALESCE(MTH_INSTL, 0 ) AS MTH_INSTL ,
  COALESCE(INSTL_CNT, 0 ) AS INSTL_CNT ,
  COALESCE(LST_INSTDY, 0 ) AS LST_INSTDY ,
  COALESCE(MTH_INT, 0 ) AS MTH_INT ,
  COALESCE(MTH_PPL, 0 ) AS MTH_PPL ,
  COALESCE(NBR_MTHS, 0 ) AS NBR_MTHS ,
  COALESCE(ORIG_PURCH, 0 ) AS ORIG_PURCH ,
  COALESCE(REM_PPL, 0 ) AS REM_PPL ,
  COALESCE(ORIG_INT, 0 ) AS ORIG_INT ,
  COALESCE(TOT_INT_CG, 0 ) AS TOT_INT_CG ,
  COALESCE(REM_INT, 0 ) AS REM_INT ,
  COALESCE(ORIG_FEE, 0 ) AS ORIG_FEE ,
  COALESCE(REM_FEE, 0 ) AS REM_FEE ,
  COALESCE(TRANS_SRC, '' ) AS TRANS_SRC ,
  COALESCE(STATUS_PRE, '' ) AS STATUS_PRE ,
  COALESCE(STATUS, '' ) AS STATUS ,
  COALESCE(STATUS_DAY, 0 ) AS STATUS_DAY ,
  COALESCE(COMM_AMT, 0 ) AS COMM_AMT ,
  COALESCE(EMPLOYEE, 0 ) AS EMPLOYEE ,
  COALESCE(FEE_FLAG, 0 ) AS FEE_FLAG ,
  COALESCE(APP_SDAY, 0 ) AS APP_SDAY ,
  COALESCE(APP_SEQ, 0 ) AS APP_SEQ ,
  COALESCE(ADDR_TYPE, '' ) AS ADDR_TYPE ,
  COALESCE(CREDP_ID, 0 ) AS CREDP_ID ,
  COALESCE(MP_TYPE, '' ) AS MP_TYPE ,
  COALESCE(PAUSE_NBRS, 0 ) AS PAUSE_NBRS ,
  COALESCE(DELAY_MTH, 0 ) AS DELAY_MTH ,
  COALESCE(CURR_NUM, 0 ) AS CURR_NUM ,
  COALESCE(ADDR1, '' ) AS ADDR1 ,
  COALESCE(ADDR2, '' ) AS ADDR2 ,
  COALESCE(ADDR3, '' ) AS ADDR3 ,
  COALESCE(ADDR4, '' ) AS ADDR4 ,
  COALESCE(RES_PPL, 0 ) AS RES_PPL ,
  COALESCE(INTER_MTHS, 0 ) AS INTER_MTHS ,
  COALESCE(PAYCF_DAY, 0 ) AS PAYCF_DAY ,
  COALESCE(REMARK, '' ) AS REMARK ,
  COALESCE(INP_SRC, '' ) AS INP_SRC 
 FROM  dw_tdata.CCB_000_MPUR_${TX_DATE_YYYYMMDD}) N
LEFT JOIN
 (SELECT 
  BANK ,
  XACCOUNT ,
  CARD_NBR ,
  CARD_BIN ,
  CARDHOLDER ,
  MP_NUMBER ,
  INP_DAY ,
  INP_TIME ,
  AUTH_CODE ,
  MERCHANT ,
  MICRO_REF ,
  PRODUCT ,
  PURCH_DAY ,
  REACT_RESN ,
  PROD_ID ,
  INT_RATE ,
  ACCEL_INT ,
  ACCEL_RESN ,
  CHECK_DIG ,
  ISSUE_NBR ,
  FIRST_INT ,
  MTH_INSTL ,
  INSTL_CNT ,
  LST_INSTDY ,
  MTH_INT ,
  MTH_PPL ,
  NBR_MTHS ,
  ORIG_PURCH ,
  REM_PPL ,
  ORIG_INT ,
  TOT_INT_CG ,
  REM_INT ,
  ORIG_FEE ,
  REM_FEE ,
  TRANS_SRC ,
  STATUS_PRE ,
  STATUS ,
  STATUS_DAY ,
  COMM_AMT ,
  EMPLOYEE ,
  FEE_FLAG ,
  APP_SDAY ,
  APP_SEQ ,
  ADDR_TYPE ,
  CREDP_ID ,
  MP_TYPE ,
  PAUSE_NBRS ,
  DELAY_MTH ,
  CURR_NUM ,
  ADDR1 ,
  ADDR2 ,
  ADDR3 ,
  ADDR4 ,
  RES_PPL ,
  INTER_MTHS ,
  PAYCF_DAY ,
  REMARK ,
  INP_SRC 
 FROM dw_sdata.CCB_000_MPUR 
 WHERE END_DT = DATE('2100-12-31') ) T
ON N.BANK = T.BANK AND N.XACCOUNT = T.XACCOUNT AND N.MP_NUMBER = T.MP_NUMBER
WHERE
(T.BANK IS NULL AND T.XACCOUNT IS NULL AND T.MP_NUMBER IS NULL)
 OR N.CARD_NBR<>T.CARD_NBR
 OR N.CARD_BIN<>T.CARD_BIN
 OR N.CARDHOLDER<>T.CARDHOLDER
 OR N.INP_DAY<>T.INP_DAY
 OR N.INP_TIME<>T.INP_TIME
 OR N.AUTH_CODE<>T.AUTH_CODE
 OR N.MERCHANT<>T.MERCHANT
 OR N.MICRO_REF<>T.MICRO_REF
 OR N.PRODUCT<>T.PRODUCT
 OR N.PURCH_DAY<>T.PURCH_DAY
 OR N.REACT_RESN<>T.REACT_RESN
 OR N.PROD_ID<>T.PROD_ID
 OR N.INT_RATE<>T.INT_RATE
 OR N.ACCEL_INT<>T.ACCEL_INT
 OR N.ACCEL_RESN<>T.ACCEL_RESN
 OR N.CHECK_DIG<>T.CHECK_DIG
 OR N.ISSUE_NBR<>T.ISSUE_NBR
 OR N.FIRST_INT<>T.FIRST_INT
 OR N.MTH_INSTL<>T.MTH_INSTL
 OR N.INSTL_CNT<>T.INSTL_CNT
 OR N.LST_INSTDY<>T.LST_INSTDY
 OR N.MTH_INT<>T.MTH_INT
 OR N.MTH_PPL<>T.MTH_PPL
 OR N.NBR_MTHS<>T.NBR_MTHS
 OR N.ORIG_PURCH<>T.ORIG_PURCH
 OR N.REM_PPL<>T.REM_PPL
 OR N.ORIG_INT<>T.ORIG_INT
 OR N.TOT_INT_CG<>T.TOT_INT_CG
 OR N.REM_INT<>T.REM_INT
 OR N.ORIG_FEE<>T.ORIG_FEE
 OR N.REM_FEE<>T.REM_FEE
 OR N.TRANS_SRC<>T.TRANS_SRC
 OR N.STATUS_PRE<>T.STATUS_PRE
 OR N.STATUS<>T.STATUS
 OR N.STATUS_DAY<>T.STATUS_DAY
 OR N.COMM_AMT<>T.COMM_AMT
 OR N.EMPLOYEE<>T.EMPLOYEE
 OR N.FEE_FLAG<>T.FEE_FLAG
 OR N.APP_SDAY<>T.APP_SDAY
 OR N.APP_SEQ<>T.APP_SEQ
 OR N.ADDR_TYPE<>T.ADDR_TYPE
 OR N.CREDP_ID<>T.CREDP_ID
 OR N.MP_TYPE<>T.MP_TYPE
 OR N.PAUSE_NBRS<>T.PAUSE_NBRS
 OR N.DELAY_MTH<>T.DELAY_MTH
 OR N.CURR_NUM<>T.CURR_NUM
 OR N.ADDR1<>T.ADDR1
 OR N.ADDR2<>T.ADDR2
 OR N.ADDR3<>T.ADDR3
 OR N.ADDR4<>T.ADDR4
 OR N.RES_PPL<>T.RES_PPL
 OR N.INTER_MTHS<>T.INTER_MTHS
 OR N.PAYCF_DAY<>T.PAYCF_DAY
 OR N.REMARK<>T.REMARK
 OR N.INP_SRC<>T.INP_SRC
;

--Step3:
UPDATE dw_sdata.CCB_000_MPUR P 
SET End_Dt=DATE('${TX_DATE_YYYYMMDD}')
FROM T_97
WHERE P.End_Dt=DATE('2100-12-31')
AND P.BANK=T_97.BANK
AND P.XACCOUNT=T_97.XACCOUNT
AND P.MP_NUMBER=T_97.MP_NUMBER
;

--Step4:
INSERT  INTO dw_sdata.CCB_000_MPUR SELECT * FROM T_97;

COMMIT;

ENDOFINPUT

  close(VSQL);

  my $RET_CODE = $? >> 8;

  if ( $RET_CODE == 0 ) {
      return 0;
  }
  else {
      return 1;
  }
}

# ------------ main function ------------
sub main
{
   my $ret;
   open(LOGONFILE_H, "${LOGON_FILE}");
   ${LOGON_STR} = <LOGONFILE_H>;
   close(LOGONFILE_H);
   
   # Get the decoded logon string
   my($user,$passwd) = split(',',${LOGON_STR}); 
   #my $decodepasswd = `${AUTO_HOME}/bin/IceCode.exe -d "$passwd" "$user"`;                     
   #${LOGON_STR} = "|vsql -h 192.168.2.44 -p 5433 -d CPCIMDB_TEST -U ".$user." -w ".$decodepasswd;

   # Call vsql command to load data
   $ret = run_vsql_command();

   print "run_vsql_command() = $ret";
   return $ret;
}

# ------------ program section ------------
if ( $#ARGV < 0 ) {
   print "Usage: [perl 程序名 Control_File] (Control_File format: dir.jobnameYYYYMMDD or sysname_jobname_YYYYMMDD.dir) 
";
   print "
";
   exit(1);
}

# Get the first argument
${CONTROL_FILE} = $ARGV[0];

if (${CONTROL_FILE} =~/[0-9]{8}($|\.)/) {
   ${TX_DATE_YYYYMMDD} = substr($&,0,8);
}
else{
   print "Usage: [perl 程序名 Control_File] (Control_File format: dir.jobnameYYYYMMDD or sysname_jobname_YYYYMMDD.dir) 
";
   print "
";
   exit(1);
}

${TX_MON_DAY_MMDD} = substr(${TX_DATE_YYYYMMDD}, length(${TX_DATE_YYYYMMDD})-4,4);
${TX_DATE} = substr(${TX_DATE_YYYYMMDD}, 0, 4)."-".substr(${TX_DATE_YYYYMMDD}, 4, 2)."-".substr(${TX_DATE_YYYYMMDD}, 6, 2);
open(STDERR, ">&STDOUT");

my $ret = main();

exit($ret);
