#!/usr/bin/perl

use strict;     # Declare using Perl strict syntax
use DBI;        # If you are using other package, declare here

# ------------ Variable Section ------------
my ${AUTO_HOME} = $ENV{"AUTO_HOME"};

my ${WML_DB} = $ENV{"AUTO_WML_DB"};
if ( !defined(${WML_DB}) ) {
    ${WML_DB} = "WML";
}
my ${WTL_DB} = $ENV{"AUTO_WTL_DB"};
if ( !defined(${WTL_DB}) ) {
    ${WTL_DB} = "WTL";
}
my ${WMLVIEW_DB} = $ENV{"AUTO_WMLVIEW_DB"};
if ( !defined(${WMLVIEW_DB}) ) {
    ${WMLVIEW_DB} = "WMLVIEW";
}
my ${WTLVIEW_DB} = $ENV{"AUTO_WTLVIEW_DB"};
if ( !defined(${WTLVIEW_DB}) ) {
    ${WTLVIEW_DB} = "WTLVIEW";
}

my ${NULL_DATE} = "1900-01-02";
my ${MIN_DATE} = "1900-01-01";
my ${MAX_DATE} = "2100-12-31";

my ${LOGON_FILE} = "${AUTO_HOME}/etc/VERTICA_LOGON";
my ${LOGON_STR};
my ${CONTROL_FILE};
my ${TX_DATE};
my ${TX_DATE_YYYYMMDD};
my ${TX_MON_DAY_MMDD};

# ------------ VSQL function ------------
sub run_vsql_command
{
  #my $rc = open(VSQL, "${LOGON_STR}");
  my $rc = open(VSQL, "|vsql -h 22.224.65.171 -p 5433 -d CPCIMDB_TEST -U dwtrans -w dwtrans2016");

  unless ($rc) {
      print "Could not invoke VSQL command
";
      return -1;
  }

# ------ Below are VSQL scripts ----------
  print VSQL <<ENDOFINPUT;

\\set ON_ERROR_STOP on

--Step0:
DELETE FROM dw_sdata.ECF_004_T01_CUST_INFO WHERE start_dt>=DATE('${TX_DATE_YYYYMMDD}');
UPDATE dw_sdata.ECF_004_T01_CUST_INFO SET end_dt=DATE('2100-12-31') WHERE end_dt>=DATE('${TX_DATE_YYYYMMDD}') AND end_dt<>DATE('2100-12-31');

--Step1:
CREATE LOCAL TEMPORARY TABLE  T_170 ON COMMIT PRESERVE ROWS AS SELECT * FROM dw_sdata.ECF_004_T01_CUST_INFO WHERE 1=0;

--Step2:
INSERT  INTO T_170 (
  PARTY_ID,
  ECIF_CUST_NO,
  OUT_CUST_NO,
  PARTY_NAME,
  CERT_TYPE,
  CERT_NO,
  CERT_OPAC_DATE,
  CERT_DUE_DATE,
  CERT_ADDR,
  CERT_NAME,
  CUST_CHN_NAME,
  GENDER,
  NAT,
  BIRTH_DATE,
  MARITAL_STATE,
  RGSTER,
  PEOPLE,
  PRFSSN,
  CUST_STATE,
  OPEN_ORG,
  OWN_ORG,
  CUST_LEVEL,
  RSD_YEAR_FLAG,
  IS_VIP_FLAG,
  REAL_NAME_FLAG,
  ANTI_LAUNDER_FLAG,
  FILLER1,
  FILLER2,
  FILLER3,
  FILLER4,
  LAST_UPDATED_TE,
  LAST_UPDATED_ORG,
  CREATED_TS,
  UPDATED_TS,
  INIT_SYSTEM_ID,
  INIT_CREATED_TS,
  LAST_SYSTEM_ID,
  LAST_UPDATED_TS,
  start_dt,
  end_dt)
SELECT
  N.PARTY_ID,
  N.ECIF_CUST_NO,
  N.OUT_CUST_NO,
  N.PARTY_NAME,
  N.CERT_TYPE,
  N.CERT_NO,
  N.CERT_OPAC_DATE,
  N.CERT_DUE_DATE,
  N.CERT_ADDR,
  N.CERT_NAME,
  N.CUST_CHN_NAME,
  N.GENDER,
  N.NAT,
  N.BIRTH_DATE,
  N.MARITAL_STATE,
  N.RGSTER,
  N.PEOPLE,
  N.PRFSSN,
  N.CUST_STATE,
  N.OPEN_ORG,
  N.OWN_ORG,
  N.CUST_LEVEL,
  N.RSD_YEAR_FLAG,
  N.IS_VIP_FLAG,
  N.REAL_NAME_FLAG,
  N.ANTI_LAUNDER_FLAG,
  N.FILLER1,
  N.FILLER2,
  N.FILLER3,
  N.FILLER4,
  N.LAST_UPDATED_TE,
  N.LAST_UPDATED_ORG,
  N.CREATED_TS,
  N.UPDATED_TS,
  N.INIT_SYSTEM_ID,
  N.INIT_CREATED_TS,
  N.LAST_SYSTEM_ID,
  N.LAST_UPDATED_TS,
  DATE('${TX_DATE_YYYYMMDD}'),
  DATE('2100-12-31')
FROM 
 (SELECT
  COALESCE(PARTY_ID, '' ) AS PARTY_ID ,
  COALESCE(ECIF_CUST_NO, '' ) AS ECIF_CUST_NO ,
  COALESCE(OUT_CUST_NO, '' ) AS OUT_CUST_NO ,
  COALESCE(PARTY_NAME, '' ) AS PARTY_NAME ,
  COALESCE(CERT_TYPE, '' ) AS CERT_TYPE ,
  COALESCE(CERT_NO, '' ) AS CERT_NO ,
  COALESCE(CERT_OPAC_DATE, '' ) AS CERT_OPAC_DATE ,
  COALESCE(CERT_DUE_DATE, '' ) AS CERT_DUE_DATE ,
  COALESCE(CERT_ADDR, '' ) AS CERT_ADDR ,
  COALESCE(CERT_NAME, '' ) AS CERT_NAME ,
  COALESCE(CUST_CHN_NAME, '' ) AS CUST_CHN_NAME ,
  COALESCE(GENDER, '' ) AS GENDER ,
  COALESCE(NAT, '' ) AS NAT ,
  COALESCE(BIRTH_DATE, '' ) AS BIRTH_DATE ,
  COALESCE(MARITAL_STATE, '' ) AS MARITAL_STATE ,
  COALESCE(RGSTER, '' ) AS RGSTER ,
  COALESCE(PEOPLE, '' ) AS PEOPLE ,
  COALESCE(PRFSSN, '' ) AS PRFSSN ,
  COALESCE(CUST_STATE, '' ) AS CUST_STATE ,
  COALESCE(OPEN_ORG, '' ) AS OPEN_ORG ,
  COALESCE(OWN_ORG, '' ) AS OWN_ORG ,
  COALESCE(CUST_LEVEL, '' ) AS CUST_LEVEL ,
  COALESCE(RSD_YEAR_FLAG, '' ) AS RSD_YEAR_FLAG ,
  COALESCE(IS_VIP_FLAG, '' ) AS IS_VIP_FLAG ,
  COALESCE(REAL_NAME_FLAG, '' ) AS REAL_NAME_FLAG ,
  COALESCE(ANTI_LAUNDER_FLAG, '' ) AS ANTI_LAUNDER_FLAG ,
  COALESCE(FILLER1, '' ) AS FILLER1 ,
  COALESCE(FILLER2, '' ) AS FILLER2 ,
  COALESCE(FILLER3, 0 ) AS FILLER3 ,
  COALESCE(FILLER4, 0 ) AS FILLER4 ,
  COALESCE(LAST_UPDATED_TE, '' ) AS LAST_UPDATED_TE ,
  COALESCE(LAST_UPDATED_ORG, '' ) AS LAST_UPDATED_ORG ,
  COALESCE(CREATED_TS, '' ) AS CREATED_TS ,
  COALESCE(UPDATED_TS, '' ) AS UPDATED_TS ,
  COALESCE(INIT_SYSTEM_ID, '' ) AS INIT_SYSTEM_ID ,
  COALESCE(INIT_CREATED_TS, '' ) AS INIT_CREATED_TS ,
  COALESCE(LAST_SYSTEM_ID, '' ) AS LAST_SYSTEM_ID ,
  COALESCE(LAST_UPDATED_TS, '' ) AS LAST_UPDATED_TS 
 FROM  dw_tdata.ECF_004_T01_CUST_INFO_${TX_DATE_YYYYMMDD}) N
LEFT JOIN
 (SELECT 
  PARTY_ID ,
  ECIF_CUST_NO ,
  OUT_CUST_NO ,
  PARTY_NAME ,
  CERT_TYPE ,
  CERT_NO ,
  CERT_OPAC_DATE ,
  CERT_DUE_DATE ,
  CERT_ADDR ,
  CERT_NAME ,
  CUST_CHN_NAME ,
  GENDER ,
  NAT ,
  BIRTH_DATE ,
  MARITAL_STATE ,
  RGSTER ,
  PEOPLE ,
  PRFSSN ,
  CUST_STATE ,
  OPEN_ORG ,
  OWN_ORG ,
  CUST_LEVEL ,
  RSD_YEAR_FLAG ,
  IS_VIP_FLAG ,
  REAL_NAME_FLAG ,
  ANTI_LAUNDER_FLAG ,
  FILLER1 ,
  FILLER2 ,
  FILLER3 ,
  FILLER4 ,
  LAST_UPDATED_TE ,
  LAST_UPDATED_ORG ,
  CREATED_TS ,
  UPDATED_TS ,
  INIT_SYSTEM_ID ,
  INIT_CREATED_TS ,
  LAST_SYSTEM_ID ,
  LAST_UPDATED_TS 
 FROM dw_sdata.ECF_004_T01_CUST_INFO 
 WHERE END_DT = DATE('2100-12-31') ) T
ON N.PARTY_ID = T.PARTY_ID
WHERE
(T.PARTY_ID IS NULL)
 OR N.ECIF_CUST_NO<>T.ECIF_CUST_NO
 OR N.OUT_CUST_NO<>T.OUT_CUST_NO
 OR N.PARTY_NAME<>T.PARTY_NAME
 OR N.CERT_TYPE<>T.CERT_TYPE
 OR N.CERT_NO<>T.CERT_NO
 OR N.CERT_OPAC_DATE<>T.CERT_OPAC_DATE
 OR N.CERT_DUE_DATE<>T.CERT_DUE_DATE
 OR N.CERT_ADDR<>T.CERT_ADDR
 OR N.CERT_NAME<>T.CERT_NAME
 OR N.CUST_CHN_NAME<>T.CUST_CHN_NAME
 OR N.GENDER<>T.GENDER
 OR N.NAT<>T.NAT
 OR N.BIRTH_DATE<>T.BIRTH_DATE
 OR N.MARITAL_STATE<>T.MARITAL_STATE
 OR N.RGSTER<>T.RGSTER
 OR N.PEOPLE<>T.PEOPLE
 OR N.PRFSSN<>T.PRFSSN
 OR N.CUST_STATE<>T.CUST_STATE
 OR N.OPEN_ORG<>T.OPEN_ORG
 OR N.OWN_ORG<>T.OWN_ORG
 OR N.CUST_LEVEL<>T.CUST_LEVEL
 OR N.RSD_YEAR_FLAG<>T.RSD_YEAR_FLAG
 OR N.IS_VIP_FLAG<>T.IS_VIP_FLAG
 OR N.REAL_NAME_FLAG<>T.REAL_NAME_FLAG
 OR N.ANTI_LAUNDER_FLAG<>T.ANTI_LAUNDER_FLAG
 OR N.FILLER1<>T.FILLER1
 OR N.FILLER2<>T.FILLER2
 OR N.FILLER3<>T.FILLER3
 OR N.FILLER4<>T.FILLER4
 OR N.LAST_UPDATED_TE<>T.LAST_UPDATED_TE
 OR N.LAST_UPDATED_ORG<>T.LAST_UPDATED_ORG
 OR N.CREATED_TS<>T.CREATED_TS
 OR N.UPDATED_TS<>T.UPDATED_TS
 OR N.INIT_SYSTEM_ID<>T.INIT_SYSTEM_ID
 OR N.INIT_CREATED_TS<>T.INIT_CREATED_TS
 OR N.LAST_SYSTEM_ID<>T.LAST_SYSTEM_ID
 OR N.LAST_UPDATED_TS<>T.LAST_UPDATED_TS
;

--Step3:
UPDATE dw_sdata.ECF_004_T01_CUST_INFO P 
SET End_Dt=DATE('${TX_DATE_YYYYMMDD}')
FROM T_170
WHERE P.End_Dt=DATE('2100-12-31')
AND P.PARTY_ID=T_170.PARTY_ID
;

--Step4:
INSERT  INTO dw_sdata.ECF_004_T01_CUST_INFO SELECT * FROM T_170;

COMMIT;

ENDOFINPUT

  close(VSQL);

  my $RET_CODE = $? >> 8;

  if ( $RET_CODE == 0 ) {
      return 0;
  }
  else {
      return 1;
  }
}

# ------------ main function ------------
sub main
{
   my $ret;
   open(LOGONFILE_H, "${LOGON_FILE}");
   ${LOGON_STR} = <LOGONFILE_H>;
   close(LOGONFILE_H);
   
   # Get the decoded logon string
   my($user,$passwd) = split(',',${LOGON_STR}); 
   #my $decodepasswd = `${AUTO_HOME}/bin/IceCode.exe -d "$passwd" "$user"`;                     
   #${LOGON_STR} = "|vsql -h 192.168.2.44 -p 5433 -d CPCIMDB_TEST -U ".$user." -w ".$decodepasswd;

   # Call vsql command to load data
   $ret = run_vsql_command();

   print "run_vsql_command() = $ret";
   return $ret;
}

# ------------ program section ------------
if ( $#ARGV < 0 ) {
   print "Usage: [perl 程序名 Control_File] (Control_File format: dir.jobnameYYYYMMDD or sysname_jobname_YYYYMMDD.dir) 
";
   print "
";
   exit(1);
}

# Get the first argument
${CONTROL_FILE} = $ARGV[0];

if (${CONTROL_FILE} =~/[0-9]{8}($|\.)/) {
   ${TX_DATE_YYYYMMDD} = substr($&,0,8);
}
else{
   print "Usage: [perl 程序名 Control_File] (Control_File format: dir.jobnameYYYYMMDD or sysname_jobname_YYYYMMDD.dir) 
";
   print "
";
   exit(1);
}

${TX_MON_DAY_MMDD} = substr(${TX_DATE_YYYYMMDD}, length(${TX_DATE_YYYYMMDD})-4,4);
${TX_DATE} = substr(${TX_DATE_YYYYMMDD}, 0, 4)."-".substr(${TX_DATE_YYYYMMDD}, 4, 2)."-".substr(${TX_DATE_YYYYMMDD}, 6, 2);
open(STDERR, ">&STDOUT");

my $ret = main();

exit($ret);
