#!/usr/bin/perl

use strict;     # Declare using Perl strict syntax
use DBI;        # If you are using other package, declare here

# ------------ Variable Section ------------
my ${AUTO_HOME} = $ENV{"AUTO_HOME"};

my ${WML_DB} = $ENV{"AUTO_WML_DB"};
if ( !defined(${WML_DB}) ) {
    ${WML_DB} = "WML";
}
my ${WTL_DB} = $ENV{"AUTO_WTL_DB"};
if ( !defined(${WTL_DB}) ) {
    ${WTL_DB} = "WTL";
}
my ${WMLVIEW_DB} = $ENV{"AUTO_WMLVIEW_DB"};
if ( !defined(${WMLVIEW_DB}) ) {
    ${WMLVIEW_DB} = "WMLVIEW";
}
my ${WTLVIEW_DB} = $ENV{"AUTO_WTLVIEW_DB"};
if ( !defined(${WTLVIEW_DB}) ) {
    ${WTLVIEW_DB} = "WTLVIEW";
}

my ${NULL_DATE} = "1900-01-02";
my ${MIN_DATE} = "1900-01-01";
my ${MAX_DATE} = "2100-12-31";

my ${LOGON_FILE} = "${AUTO_HOME}/etc/VERTICA_LOGON";
my ${LOGON_STR};
my ${CONTROL_FILE};
my ${TX_DATE};
my ${TX_DATE_YYYYMMDD};
my ${TX_MON_DAY_MMDD};

# ------------ VSQL function ------------
sub run_vsql_command
{
  #my $rc = open(VSQL, "${LOGON_STR}");
  my $rc = open(VSQL, "|vsql -h 22.224.65.171 -p 5433 -d CPCIMDB_TEST -U dwtrans -w dwtrans2016");

  unless ($rc) {
      print "Could not invoke VSQL command
";
      return -1;
  }

# ------ Below are VSQL scripts ----------
  print VSQL <<ENDOFINPUT;

\\set ON_ERROR_STOP on

--Step0:
DELETE FROM dw_sdata.COS_000_CFLOWS WHERE start_dt>=DATE('${TX_DATE_YYYYMMDD}');
UPDATE dw_sdata.COS_000_CFLOWS SET end_dt=DATE('2100-12-31') WHERE end_dt>=DATE('${TX_DATE_YYYYMMDD}') AND end_dt<>DATE('2100-12-31');

--Step1:
CREATE LOCAL TEMPORARY TABLE  T_149 ON COMMIT PRESERVE ROWS AS SELECT * FROM dw_sdata.COS_000_CFLOWS WHERE 1=0;

--Step2:
INSERT  INTO T_149 (
  CFLOW_NO,
  EVENT_NO,
  FLOW_NO,
  SEQ_NO,
  DEALTYPE,
  TRANS_TYPE,
  SECTYPE,
  BANK_ACC,
  CFLOW_DT,
  CCY,
  CCY1,
  CCY2,
  INPUT_DT,
  EFFECT_DT,
  CPARTY,
  DEAL_NO,
  AMOUNT,
  BALANCE,
  COMMENTS,
  ENTITY,
  EB_SENT,
  EB_CHQ_NO,
  CUSTOMISED,
  FLAG,
  NETT_NO,
  CFSTATUS,
  CASHSTATUS,
  VOSTRO_ACC,
  VOSTRO_ADH,
  PAY_METHOD,
  VOSTRO_DEF,
  VOSTRO_INS,
  VOSTRO_BBI,
  NOSTRO_INS,
  ADVPRINTED,
  ADVTIME,
  CONFO_NO,
  CNFSTATUS,
  CNFMTCHTYP,
  CFLOWSTYPE,
  BANKRUN,
  OUR_IDENT,
  FLOW_ORIG,
  APSTUS1,
  APUSR1,
  APSTUS2,
  APUSR2,
  CMPT_NO,
  STMTRUN,
  BKDSTMTRUN,
  STA_FLAG,
  MATCH_BL,
  MATCH_DET,
  ACTN_NO,
  BR_CFLOW_DT,
  INTERCOMP,
  LIFECYCLE_ID,
  PAYMENT_CATEGORY,
  start_dt,
  end_dt)
SELECT
  N.CFLOW_NO,
  N.EVENT_NO,
  N.FLOW_NO,
  N.SEQ_NO,
  N.DEALTYPE,
  N.TRANS_TYPE,
  N.SECTYPE,
  N.BANK_ACC,
  N.CFLOW_DT,
  N.CCY,
  N.CCY1,
  N.CCY2,
  N.INPUT_DT,
  N.EFFECT_DT,
  N.CPARTY,
  N.DEAL_NO,
  N.AMOUNT,
  N.BALANCE,
  N.COMMENTS,
  N.ENTITY,
  N.EB_SENT,
  N.EB_CHQ_NO,
  N.CUSTOMISED,
  N.FLAG,
  N.NETT_NO,
  N.CFSTATUS,
  N.CASHSTATUS,
  N.VOSTRO_ACC,
  N.VOSTRO_ADH,
  N.PAY_METHOD,
  N.VOSTRO_DEF,
  N.VOSTRO_INS,
  N.VOSTRO_BBI,
  N.NOSTRO_INS,
  N.ADVPRINTED,
  N.ADVTIME,
  N.CONFO_NO,
  N.CNFSTATUS,
  N.CNFMTCHTYP,
  N.CFLOWSTYPE,
  N.BANKRUN,
  N.OUR_IDENT,
  N.FLOW_ORIG,
  N.APSTUS1,
  N.APUSR1,
  N.APSTUS2,
  N.APUSR2,
  N.CMPT_NO,
  N.STMTRUN,
  N.BKDSTMTRUN,
  N.STA_FLAG,
  N.MATCH_BL,
  N.MATCH_DET,
  N.ACTN_NO,
  N.BR_CFLOW_DT,
  N.INTERCOMP,
  N.LIFECYCLE_ID,
  N.PAYMENT_CATEGORY,
  DATE('${TX_DATE_YYYYMMDD}'),
  DATE('2100-12-31')
FROM 
 (SELECT
  COALESCE(CFLOW_NO, 0 ) AS CFLOW_NO ,
  COALESCE(EVENT_NO, 0 ) AS EVENT_NO ,
  COALESCE(FLOW_NO, 0 ) AS FLOW_NO ,
  COALESCE(SEQ_NO, 0 ) AS SEQ_NO ,
  COALESCE(DEALTYPE, '' ) AS DEALTYPE ,
  COALESCE(TRANS_TYPE, '' ) AS TRANS_TYPE ,
  COALESCE(SECTYPE, '' ) AS SECTYPE ,
  COALESCE(BANK_ACC, '' ) AS BANK_ACC ,
  COALESCE(CFLOW_DT, '' ) AS CFLOW_DT ,
  COALESCE(CCY, '' ) AS CCY ,
  COALESCE(CCY1, '' ) AS CCY1 ,
  COALESCE(CCY2, '' ) AS CCY2 ,
  COALESCE(INPUT_DT, '' ) AS INPUT_DT ,
  COALESCE(EFFECT_DT, '' ) AS EFFECT_DT ,
  COALESCE(CPARTY, '' ) AS CPARTY ,
  COALESCE(DEAL_NO, 0 ) AS DEAL_NO ,
  COALESCE(AMOUNT, 0 ) AS AMOUNT ,
  COALESCE(BALANCE, 0 ) AS BALANCE ,
  COALESCE(COMMENTS, '' ) AS COMMENTS ,
  COALESCE(ENTITY, '' ) AS ENTITY ,
  COALESCE(EB_SENT, '' ) AS EB_SENT ,
  COALESCE(EB_CHQ_NO, 0 ) AS EB_CHQ_NO ,
  COALESCE(CUSTOMISED, '' ) AS CUSTOMISED ,
  COALESCE(FLAG, '' ) AS FLAG ,
  COALESCE(NETT_NO, '' ) AS NETT_NO ,
  COALESCE(CFSTATUS, '' ) AS CFSTATUS ,
  COALESCE(CASHSTATUS, '' ) AS CASHSTATUS ,
  COALESCE(VOSTRO_ACC, '' ) AS VOSTRO_ACC ,
  COALESCE(VOSTRO_ADH, '' ) AS VOSTRO_ADH ,
  COALESCE(PAY_METHOD, '' ) AS PAY_METHOD ,
  COALESCE(VOSTRO_DEF, '' ) AS VOSTRO_DEF ,
  COALESCE(VOSTRO_INS, '' ) AS VOSTRO_INS ,
  COALESCE(VOSTRO_BBI, '' ) AS VOSTRO_BBI ,
  COALESCE(NOSTRO_INS, '' ) AS NOSTRO_INS ,
  COALESCE(ADVPRINTED, '' ) AS ADVPRINTED ,
  COALESCE(ADVTIME, '' ) AS ADVTIME ,
  COALESCE(CONFO_NO, '' ) AS CONFO_NO ,
  COALESCE(CNFSTATUS, '' ) AS CNFSTATUS ,
  COALESCE(CNFMTCHTYP, '' ) AS CNFMTCHTYP ,
  COALESCE(CFLOWSTYPE, '' ) AS CFLOWSTYPE ,
  COALESCE(BANKRUN, '' ) AS BANKRUN ,
  COALESCE(OUR_IDENT, '' ) AS OUR_IDENT ,
  COALESCE(FLOW_ORIG, '' ) AS FLOW_ORIG ,
  COALESCE(APSTUS1, '' ) AS APSTUS1 ,
  COALESCE(APUSR1, '' ) AS APUSR1 ,
  COALESCE(APSTUS2, '' ) AS APSTUS2 ,
  COALESCE(APUSR2, '' ) AS APUSR2 ,
  COALESCE(CMPT_NO, 0 ) AS CMPT_NO ,
  COALESCE(STMTRUN, '' ) AS STMTRUN ,
  COALESCE(BKDSTMTRUN, '' ) AS BKDSTMTRUN ,
  COALESCE(STA_FLAG, '' ) AS STA_FLAG ,
  COALESCE(MATCH_BL, 0 ) AS MATCH_BL ,
  COALESCE(MATCH_DET, 0 ) AS MATCH_DET ,
  COALESCE(ACTN_NO, 0 ) AS ACTN_NO ,
  COALESCE(BR_CFLOW_DT, '' ) AS BR_CFLOW_DT ,
  COALESCE(INTERCOMP, '' ) AS INTERCOMP ,
  COALESCE(LIFECYCLE_ID, 0 ) AS LIFECYCLE_ID ,
  COALESCE(PAYMENT_CATEGORY, 0 ) AS PAYMENT_CATEGORY 
 FROM  dw_tdata.COS_000_CFLOWS_${TX_DATE_YYYYMMDD}) N
LEFT JOIN
 (SELECT 
  CFLOW_NO ,
  EVENT_NO ,
  FLOW_NO ,
  SEQ_NO ,
  DEALTYPE ,
  TRANS_TYPE ,
  SECTYPE ,
  BANK_ACC ,
  CFLOW_DT ,
  CCY ,
  CCY1 ,
  CCY2 ,
  INPUT_DT ,
  EFFECT_DT ,
  CPARTY ,
  DEAL_NO ,
  AMOUNT ,
  BALANCE ,
  COMMENTS ,
  ENTITY ,
  EB_SENT ,
  EB_CHQ_NO ,
  CUSTOMISED ,
  FLAG ,
  NETT_NO ,
  CFSTATUS ,
  CASHSTATUS ,
  VOSTRO_ACC ,
  VOSTRO_ADH ,
  PAY_METHOD ,
  VOSTRO_DEF ,
  VOSTRO_INS ,
  VOSTRO_BBI ,
  NOSTRO_INS ,
  ADVPRINTED ,
  ADVTIME ,
  CONFO_NO ,
  CNFSTATUS ,
  CNFMTCHTYP ,
  CFLOWSTYPE ,
  BANKRUN ,
  OUR_IDENT ,
  FLOW_ORIG ,
  APSTUS1 ,
  APUSR1 ,
  APSTUS2 ,
  APUSR2 ,
  CMPT_NO ,
  STMTRUN ,
  BKDSTMTRUN ,
  STA_FLAG ,
  MATCH_BL ,
  MATCH_DET ,
  ACTN_NO ,
  BR_CFLOW_DT ,
  INTERCOMP ,
  LIFECYCLE_ID ,
  PAYMENT_CATEGORY 
 FROM dw_sdata.COS_000_CFLOWS 
 WHERE END_DT = DATE('2100-12-31') ) T
ON N.SEQ_NO = T.SEQ_NO
WHERE
(T.SEQ_NO IS NULL)
 OR N.CFLOW_NO<>T.CFLOW_NO
 OR N.EVENT_NO<>T.EVENT_NO
 OR N.FLOW_NO<>T.FLOW_NO
 OR N.DEALTYPE<>T.DEALTYPE
 OR N.TRANS_TYPE<>T.TRANS_TYPE
 OR N.SECTYPE<>T.SECTYPE
 OR N.BANK_ACC<>T.BANK_ACC
 OR N.CFLOW_DT<>T.CFLOW_DT
 OR N.CCY<>T.CCY
 OR N.CCY1<>T.CCY1
 OR N.CCY2<>T.CCY2
 OR N.INPUT_DT<>T.INPUT_DT
 OR N.EFFECT_DT<>T.EFFECT_DT
 OR N.CPARTY<>T.CPARTY
 OR N.DEAL_NO<>T.DEAL_NO
 OR N.AMOUNT<>T.AMOUNT
 OR N.BALANCE<>T.BALANCE
 OR N.COMMENTS<>T.COMMENTS
 OR N.ENTITY<>T.ENTITY
 OR N.EB_SENT<>T.EB_SENT
 OR N.EB_CHQ_NO<>T.EB_CHQ_NO
 OR N.CUSTOMISED<>T.CUSTOMISED
 OR N.FLAG<>T.FLAG
 OR N.NETT_NO<>T.NETT_NO
 OR N.CFSTATUS<>T.CFSTATUS
 OR N.CASHSTATUS<>T.CASHSTATUS
 OR N.VOSTRO_ACC<>T.VOSTRO_ACC
 OR N.VOSTRO_ADH<>T.VOSTRO_ADH
 OR N.PAY_METHOD<>T.PAY_METHOD
 OR N.VOSTRO_DEF<>T.VOSTRO_DEF
 OR N.VOSTRO_INS<>T.VOSTRO_INS
 OR N.VOSTRO_BBI<>T.VOSTRO_BBI
 OR N.NOSTRO_INS<>T.NOSTRO_INS
 OR N.ADVPRINTED<>T.ADVPRINTED
 OR N.ADVTIME<>T.ADVTIME
 OR N.CONFO_NO<>T.CONFO_NO
 OR N.CNFSTATUS<>T.CNFSTATUS
 OR N.CNFMTCHTYP<>T.CNFMTCHTYP
 OR N.CFLOWSTYPE<>T.CFLOWSTYPE
 OR N.BANKRUN<>T.BANKRUN
 OR N.OUR_IDENT<>T.OUR_IDENT
 OR N.FLOW_ORIG<>T.FLOW_ORIG
 OR N.APSTUS1<>T.APSTUS1
 OR N.APUSR1<>T.APUSR1
 OR N.APSTUS2<>T.APSTUS2
 OR N.APUSR2<>T.APUSR2
 OR N.CMPT_NO<>T.CMPT_NO
 OR N.STMTRUN<>T.STMTRUN
 OR N.BKDSTMTRUN<>T.BKDSTMTRUN
 OR N.STA_FLAG<>T.STA_FLAG
 OR N.MATCH_BL<>T.MATCH_BL
 OR N.MATCH_DET<>T.MATCH_DET
 OR N.ACTN_NO<>T.ACTN_NO
 OR N.BR_CFLOW_DT<>T.BR_CFLOW_DT
 OR N.INTERCOMP<>T.INTERCOMP
 OR N.LIFECYCLE_ID<>T.LIFECYCLE_ID
 OR N.PAYMENT_CATEGORY<>T.PAYMENT_CATEGORY
;

--Step3:
UPDATE dw_sdata.COS_000_CFLOWS P 
SET End_Dt=DATE('${TX_DATE_YYYYMMDD}')
FROM T_149
WHERE P.End_Dt=DATE('2100-12-31')
AND P.SEQ_NO=T_149.SEQ_NO
;

--Step4:
INSERT  INTO dw_sdata.COS_000_CFLOWS SELECT * FROM T_149;

COMMIT;

ENDOFINPUT

  close(VSQL);

  my $RET_CODE = $? >> 8;

  if ( $RET_CODE == 0 ) {
      return 0;
  }
  else {
      return 1;
  }
}

# ------------ main function ------------
sub main
{
   my $ret;
   open(LOGONFILE_H, "${LOGON_FILE}");
   ${LOGON_STR} = <LOGONFILE_H>;
   close(LOGONFILE_H);
   
   # Get the decoded logon string
   my($user,$passwd) = split(',',${LOGON_STR}); 
   #my $decodepasswd = `${AUTO_HOME}/bin/IceCode.exe -d "$passwd" "$user"`;                     
   #${LOGON_STR} = "|vsql -h 192.168.2.44 -p 5433 -d CPCIMDB_TEST -U ".$user." -w ".$decodepasswd;

   # Call vsql command to load data
   $ret = run_vsql_command();

   print "run_vsql_command() = $ret";
   return $ret;
}

# ------------ program section ------------
if ( $#ARGV < 0 ) {
   print "Usage: [perl 程序名 Control_File] (Control_File format: dir.jobnameYYYYMMDD or sysname_jobname_YYYYMMDD.dir) 
";
   print "
";
   exit(1);
}

# Get the first argument
${CONTROL_FILE} = $ARGV[0];

if (${CONTROL_FILE} =~/[0-9]{8}($|\.)/) {
   ${TX_DATE_YYYYMMDD} = substr($&,0,8);
}
else{
   print "Usage: [perl 程序名 Control_File] (Control_File format: dir.jobnameYYYYMMDD or sysname_jobname_YYYYMMDD.dir) 
";
   print "
";
   exit(1);
}

${TX_MON_DAY_MMDD} = substr(${TX_DATE_YYYYMMDD}, length(${TX_DATE_YYYYMMDD})-4,4);
${TX_DATE} = substr(${TX_DATE_YYYYMMDD}, 0, 4)."-".substr(${TX_DATE_YYYYMMDD}, 4, 2)."-".substr(${TX_DATE_YYYYMMDD}, 6, 2);
open(STDERR, ">&STDOUT");

my $ret = main();

exit($ret);
