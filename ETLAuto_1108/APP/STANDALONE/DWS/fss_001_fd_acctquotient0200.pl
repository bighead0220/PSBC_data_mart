#!/usr/bin/perl

use strict;     # Declare using Perl strict syntax
use DBI;        # If you are using other package, declare here

# ------------ Variable Section ------------
my ${AUTO_HOME} = $ENV{"AUTO_HOME"};

my ${WML_DB} = $ENV{"AUTO_WML_DB"};
if ( !defined(${WML_DB}) ) {
    ${WML_DB} = "WML";
}
my ${WTL_DB} = $ENV{"AUTO_WTL_DB"};
if ( !defined(${WTL_DB}) ) {
    ${WTL_DB} = "WTL";
}
my ${WMLVIEW_DB} = $ENV{"AUTO_WMLVIEW_DB"};
if ( !defined(${WMLVIEW_DB}) ) {
    ${WMLVIEW_DB} = "WMLVIEW";
}
my ${WTLVIEW_DB} = $ENV{"AUTO_WTLVIEW_DB"};
if ( !defined(${WTLVIEW_DB}) ) {
    ${WTLVIEW_DB} = "WTLVIEW";
}

my ${NULL_DATE} = "1900-01-02";
my ${MIN_DATE} = "1900-01-01";
my ${MAX_DATE} = "2100-12-31";

my ${LOGON_FILE} = "${AUTO_HOME}/etc/VERTICA_LOGON";
my ${LOGON_STR};
my ${CONTROL_FILE};
my ${TX_DATE};
my ${TX_DATE_YYYYMMDD};
my ${TX_MON_DAY_MMDD};

# ------------ VSQL function ------------
sub run_vsql_command
{
  #my $rc = open(VSQL, "${LOGON_STR}");
  my $rc = open(VSQL, "|vsql -h 22.224.65.171 -p 5433 -d CPCIMDB_TEST -U dwtrans -w dwtrans2016");

  unless ($rc) {
      print "Could not invoke VSQL command
";
      return -1;
  }

# ------ Below are VSQL scripts ----------
  print VSQL <<ENDOFINPUT;

\\set ON_ERROR_STOP on

--Step0:
DELETE FROM dw_sdata.FSS_001_FD_ACCTQUOTIENT WHERE start_dt>=DATE('${TX_DATE_YYYYMMDD}');
UPDATE dw_sdata.FSS_001_FD_ACCTQUOTIENT SET end_dt=DATE('2100-12-31') WHERE end_dt>=DATE('${TX_DATE_YYYYMMDD}') AND end_dt<>DATE('2100-12-31');

--Step1:
CREATE LOCAL TEMPORARY TABLE  T_184 ON COMMIT PRESERVE ROWS AS SELECT * FROM dw_sdata.FSS_001_FD_ACCTQUOTIENT WHERE 1=0;

--Step2:
INSERT  INTO T_184 (
  CUSTOMERID,
  BUSINESSTYPECODE,
  AGENTCORPCODE,
  BUSINESSKINDCODE,
  OPENDATE,
  MODIFYDATE,
  CANCELDATE,
  AFFIRMQUOTIENT,
  AFFIRMAMT,
  TOTALQUOTIENT,
  USEQUOTIENT,
  STOPQUOTIENT,
  CONGEALQUOTIENT,
  BONUSMODE,
  LASTINCOMEAMT,
  LASTPAYOUTAMT,
  THISINCOMEAMT,
  THISPAYOUTAMT,
  CUSTOMERKIND,
  FPORGANCODE,
  MIXALLOWREDEMPTDATE,
  start_dt,
  end_dt)
SELECT
  N.CUSTOMERID,
  N.BUSINESSTYPECODE,
  N.AGENTCORPCODE,
  N.BUSINESSKINDCODE,
  N.OPENDATE,
  N.MODIFYDATE,
  N.CANCELDATE,
  N.AFFIRMQUOTIENT,
  N.AFFIRMAMT,
  N.TOTALQUOTIENT,
  N.USEQUOTIENT,
  N.STOPQUOTIENT,
  N.CONGEALQUOTIENT,
  N.BONUSMODE,
  N.LASTINCOMEAMT,
  N.LASTPAYOUTAMT,
  N.THISINCOMEAMT,
  N.THISPAYOUTAMT,
  N.CUSTOMERKIND,
  N.FPORGANCODE,
  N.MIXALLOWREDEMPTDATE,
  DATE('${TX_DATE_YYYYMMDD}'),
  DATE('2100-12-31')
FROM 
 (SELECT
  COALESCE(CUSTOMERID, '' ) AS CUSTOMERID ,
  COALESCE(BUSINESSTYPECODE, '' ) AS BUSINESSTYPECODE ,
  COALESCE(AGENTCORPCODE, '' ) AS AGENTCORPCODE ,
  COALESCE(BUSINESSKINDCODE, '' ) AS BUSINESSKINDCODE ,
  COALESCE(OPENDATE, '' ) AS OPENDATE ,
  COALESCE(MODIFYDATE, '' ) AS MODIFYDATE ,
  COALESCE(CANCELDATE, '' ) AS CANCELDATE ,
  COALESCE(AFFIRMQUOTIENT, 0 ) AS AFFIRMQUOTIENT ,
  COALESCE(AFFIRMAMT, 0 ) AS AFFIRMAMT ,
  COALESCE(TOTALQUOTIENT, 0 ) AS TOTALQUOTIENT ,
  COALESCE(USEQUOTIENT, 0 ) AS USEQUOTIENT ,
  COALESCE(STOPQUOTIENT, 0 ) AS STOPQUOTIENT ,
  COALESCE(CONGEALQUOTIENT, 0 ) AS CONGEALQUOTIENT ,
  COALESCE(BONUSMODE, '' ) AS BONUSMODE ,
  COALESCE(LASTINCOMEAMT, 0 ) AS LASTINCOMEAMT ,
  COALESCE(LASTPAYOUTAMT, 0 ) AS LASTPAYOUTAMT ,
  COALESCE(THISINCOMEAMT, 0 ) AS THISINCOMEAMT ,
  COALESCE(THISPAYOUTAMT, 0 ) AS THISPAYOUTAMT ,
  COALESCE(CUSTOMERKIND, '' ) AS CUSTOMERKIND ,
  COALESCE(FPORGANCODE, '' ) AS FPORGANCODE ,
  COALESCE(MIXALLOWREDEMPTDATE, '' ) AS MIXALLOWREDEMPTDATE 
 FROM  dw_tdata.FSS_001_FD_ACCTQUOTIENT_${TX_DATE_YYYYMMDD}) N
LEFT JOIN
 (SELECT 
  CUSTOMERID ,
  BUSINESSTYPECODE ,
  AGENTCORPCODE ,
  BUSINESSKINDCODE ,
  OPENDATE ,
  MODIFYDATE ,
  CANCELDATE ,
  AFFIRMQUOTIENT ,
  AFFIRMAMT ,
  TOTALQUOTIENT ,
  USEQUOTIENT ,
  STOPQUOTIENT ,
  CONGEALQUOTIENT ,
  BONUSMODE ,
  LASTINCOMEAMT ,
  LASTPAYOUTAMT ,
  THISINCOMEAMT ,
  THISPAYOUTAMT ,
  CUSTOMERKIND ,
  FPORGANCODE ,
  MIXALLOWREDEMPTDATE 
 FROM dw_sdata.FSS_001_FD_ACCTQUOTIENT 
 WHERE END_DT = DATE('2100-12-31') ) T
ON N.CUSTOMERID = T.CUSTOMERID AND N.BUSINESSTYPECODE = T.BUSINESSTYPECODE AND N.AGENTCORPCODE = T.AGENTCORPCODE AND N.BUSINESSKINDCODE = T.BUSINESSKINDCODE
WHERE
(T.CUSTOMERID IS NULL AND T.BUSINESSTYPECODE IS NULL AND T.AGENTCORPCODE IS NULL AND T.BUSINESSKINDCODE IS NULL)
 OR N.OPENDATE<>T.OPENDATE
 OR N.MODIFYDATE<>T.MODIFYDATE
 OR N.CANCELDATE<>T.CANCELDATE
 OR N.AFFIRMQUOTIENT<>T.AFFIRMQUOTIENT
 OR N.AFFIRMAMT<>T.AFFIRMAMT
 OR N.TOTALQUOTIENT<>T.TOTALQUOTIENT
 OR N.USEQUOTIENT<>T.USEQUOTIENT
 OR N.STOPQUOTIENT<>T.STOPQUOTIENT
 OR N.CONGEALQUOTIENT<>T.CONGEALQUOTIENT
 OR N.BONUSMODE<>T.BONUSMODE
 OR N.LASTINCOMEAMT<>T.LASTINCOMEAMT
 OR N.LASTPAYOUTAMT<>T.LASTPAYOUTAMT
 OR N.THISINCOMEAMT<>T.THISINCOMEAMT
 OR N.THISPAYOUTAMT<>T.THISPAYOUTAMT
 OR N.CUSTOMERKIND<>T.CUSTOMERKIND
 OR N.FPORGANCODE<>T.FPORGANCODE
 OR N.MIXALLOWREDEMPTDATE<>T.MIXALLOWREDEMPTDATE
;

--Step3:
UPDATE dw_sdata.FSS_001_FD_ACCTQUOTIENT P 
SET End_Dt=DATE('${TX_DATE_YYYYMMDD}')
FROM T_184
WHERE P.End_Dt=DATE('2100-12-31')
AND P.CUSTOMERID=T_184.CUSTOMERID
AND P.BUSINESSTYPECODE=T_184.BUSINESSTYPECODE
AND P.AGENTCORPCODE=T_184.AGENTCORPCODE
AND P.BUSINESSKINDCODE=T_184.BUSINESSKINDCODE
;

--Step4:
INSERT  INTO dw_sdata.FSS_001_FD_ACCTQUOTIENT SELECT * FROM T_184;

COMMIT;

ENDOFINPUT

  close(VSQL);

  my $RET_CODE = $? >> 8;

  if ( $RET_CODE == 0 ) {
      return 0;
  }
  else {
      return 1;
  }
}

# ------------ main function ------------
sub main
{
   my $ret;
   open(LOGONFILE_H, "${LOGON_FILE}");
   ${LOGON_STR} = <LOGONFILE_H>;
   close(LOGONFILE_H);
   
   # Get the decoded logon string
   my($user,$passwd) = split(',',${LOGON_STR}); 
   #my $decodepasswd = `${AUTO_HOME}/bin/IceCode.exe -d "$passwd" "$user"`;                     
   #${LOGON_STR} = "|vsql -h 192.168.2.44 -p 5433 -d CPCIMDB_TEST -U ".$user." -w ".$decodepasswd;

   # Call vsql command to load data
   $ret = run_vsql_command();

   print "run_vsql_command() = $ret";
   return $ret;
}

# ------------ program section ------------
if ( $#ARGV < 0 ) {
   print "Usage: [perl 程序名 Control_File] (Control_File format: dir.jobnameYYYYMMDD or sysname_jobname_YYYYMMDD.dir) 
";
   print "
";
   exit(1);
}

# Get the first argument
${CONTROL_FILE} = $ARGV[0];

if (${CONTROL_FILE} =~/[0-9]{8}($|\.)/) {
   ${TX_DATE_YYYYMMDD} = substr($&,0,8);
}
else{
   print "Usage: [perl 程序名 Control_File] (Control_File format: dir.jobnameYYYYMMDD or sysname_jobname_YYYYMMDD.dir) 
";
   print "
";
   exit(1);
}

${TX_MON_DAY_MMDD} = substr(${TX_DATE_YYYYMMDD}, length(${TX_DATE_YYYYMMDD})-4,4);
${TX_DATE} = substr(${TX_DATE_YYYYMMDD}, 0, 4)."-".substr(${TX_DATE_YYYYMMDD}, 4, 2)."-".substr(${TX_DATE_YYYYMMDD}, 6, 2);
open(STDERR, ">&STDOUT");

my $ret = main();

exit($ret);
