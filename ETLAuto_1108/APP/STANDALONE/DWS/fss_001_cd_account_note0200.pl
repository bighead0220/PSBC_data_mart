#!/usr/bin/perl

use strict;     # Declare using Perl strict syntax
use DBI;        # If you are using other package, declare here

# ------------ Variable Section ------------
my ${AUTO_HOME} = $ENV{"AUTO_HOME"};

my ${WML_DB} = $ENV{"AUTO_WML_DB"};
if ( !defined(${WML_DB}) ) {
    ${WML_DB} = "WML";
}
my ${WTL_DB} = $ENV{"AUTO_WTL_DB"};
if ( !defined(${WTL_DB}) ) {
    ${WTL_DB} = "WTL";
}
my ${WMLVIEW_DB} = $ENV{"AUTO_WMLVIEW_DB"};
if ( !defined(${WMLVIEW_DB}) ) {
    ${WMLVIEW_DB} = "WMLVIEW";
}
my ${WTLVIEW_DB} = $ENV{"AUTO_WTLVIEW_DB"};
if ( !defined(${WTLVIEW_DB}) ) {
    ${WTLVIEW_DB} = "WTLVIEW";
}

my ${NULL_DATE} = "1900-01-02";
my ${MIN_DATE} = "1900-01-01";
my ${MAX_DATE} = "2100-12-31";

my ${LOGON_FILE} = "${AUTO_HOME}/etc/VERTICA_LOGON";
my ${LOGON_STR};
my ${CONTROL_FILE};
my ${TX_DATE};
my ${TX_DATE_YYYYMMDD};
my ${TX_MON_DAY_MMDD};

# ------------ VSQL function ------------
sub run_vsql_command
{
  #my $rc = open(VSQL, "${LOGON_STR}");
  my $rc = open(VSQL, "|vsql -h 22.224.65.171 -p 5433 -d CPCIMDB_TEST -U dwtrans -w dwtrans2016");

  unless ($rc) {
      print "Could not invoke VSQL command
";
      return -1;
  }

# ------ Below are VSQL scripts ----------
  print VSQL <<ENDOFINPUT;

\\set ON_ERROR_STOP on

--Step0:
DELETE FROM dw_sdata.FSS_001_CD_ACCOUNT_NOTE WHERE start_dt>=DATE('${TX_DATE_YYYYMMDD}');
UPDATE dw_sdata.FSS_001_CD_ACCOUNT_NOTE SET end_dt=DATE('2100-12-31') WHERE end_dt>=DATE('${TX_DATE_YYYYMMDD}') AND end_dt<>DATE('2100-12-31');

--Step1:
CREATE LOCAL TEMPORARY TABLE  T_175 ON COMMIT PRESERVE ROWS AS SELECT * FROM dw_sdata.FSS_001_CD_ACCOUNT_NOTE WHERE 1=0;

--Step2:
INSERT  INTO T_175 (
  CUSTOMERID,
  ACCOUNTCODE,
  KINDCODE,
  SELLFLAG,
  SEAL,
  PASSWORDSTATE,
  CUSTORMERNAME,
  PASSWORD,
  RATEFLAG,
  QXDATE,
  JEDATE,
  JELILV,
  JELIXI,
  OPENORGAN,
  OPENTELLER,
  OPENLSH,
  OPENDATE,
  OPENTIME,
  MODIFYDATE,
  RATE,
  RATELEVEL,
  ACCRUALJE,
  DELDATE,
  DELORGAN,
  DELTELLER,
  DELLSH,
  DELHIME,
  PZPCODE,
  BOOKAMT,
  PAYKIND,
  PAYPASSWORDFLAG,
  ISSAVE,
  SAVEDFLAG,
  ACCTACCOUNT,
  SAVEACCKIND,
  CERTIFICATEKIND,
  CERTIFICATECODE,
  ZJKIND,
  ZJCODE,
  ACCTFLAG,
  JIABANACCT,
  CUSTOMERMGRCODE,
  CHULIFLAG,
  PSFBATCHSERVER,
  start_dt,
  end_dt)
SELECT
  N.CUSTOMERID,
  N.ACCOUNTCODE,
  N.KINDCODE,
  N.SELLFLAG,
  N.SEAL,
  N.PASSWORDSTATE,
  N.CUSTORMERNAME,
  N.PASSWORD,
  N.RATEFLAG,
  N.QXDATE,
  N.JEDATE,
  N.JELILV,
  N.JELIXI,
  N.OPENORGAN,
  N.OPENTELLER,
  N.OPENLSH,
  N.OPENDATE,
  N.OPENTIME,
  N.MODIFYDATE,
  N.RATE,
  N.RATELEVEL,
  N.ACCRUALJE,
  N.DELDATE,
  N.DELORGAN,
  N.DELTELLER,
  N.DELLSH,
  N.DELHIME,
  N.PZPCODE,
  N.BOOKAMT,
  N.PAYKIND,
  N.PAYPASSWORDFLAG,
  N.ISSAVE,
  N.SAVEDFLAG,
  N.ACCTACCOUNT,
  N.SAVEACCKIND,
  N.CERTIFICATEKIND,
  N.CERTIFICATECODE,
  N.ZJKIND,
  N.ZJCODE,
  N.ACCTFLAG,
  N.JIABANACCT,
  N.CUSTOMERMGRCODE,
  N.CHULIFLAG,
  N.PSFBATCHSERVER,
  DATE('${TX_DATE_YYYYMMDD}'),
  DATE('2100-12-31')
FROM 
 (SELECT
  COALESCE(CUSTOMERID, '' ) AS CUSTOMERID ,
  COALESCE(ACCOUNTCODE, '' ) AS ACCOUNTCODE ,
  COALESCE(KINDCODE, '' ) AS KINDCODE ,
  COALESCE(SELLFLAG, '' ) AS SELLFLAG ,
  COALESCE(SEAL, '' ) AS SEAL ,
  COALESCE(PASSWORDSTATE, '' ) AS PASSWORDSTATE ,
  COALESCE(CUSTORMERNAME, '' ) AS CUSTORMERNAME ,
  COALESCE(PASSWORD, '' ) AS PASSWORD ,
  COALESCE(RATEFLAG, '' ) AS RATEFLAG ,
  COALESCE(QXDATE, '' ) AS QXDATE ,
  COALESCE(JEDATE, '' ) AS JEDATE ,
  COALESCE(JELILV, 0 ) AS JELILV ,
  COALESCE(JELIXI, 0 ) AS JELIXI ,
  COALESCE(OPENORGAN, '' ) AS OPENORGAN ,
  COALESCE(OPENTELLER, '' ) AS OPENTELLER ,
  COALESCE(OPENLSH, '' ) AS OPENLSH ,
  COALESCE(OPENDATE, '' ) AS OPENDATE ,
  COALESCE(OPENTIME, '' ) AS OPENTIME ,
  COALESCE(MODIFYDATE, '' ) AS MODIFYDATE ,
  COALESCE(RATE, 0 ) AS RATE ,
  COALESCE(RATELEVEL, 0 ) AS RATELEVEL ,
  COALESCE(ACCRUALJE, 0 ) AS ACCRUALJE ,
  COALESCE(DELDATE, '' ) AS DELDATE ,
  COALESCE(DELORGAN, '' ) AS DELORGAN ,
  COALESCE(DELTELLER, '' ) AS DELTELLER ,
  COALESCE(DELLSH, '' ) AS DELLSH ,
  COALESCE(DELHIME, '' ) AS DELHIME ,
  COALESCE(PZPCODE, '' ) AS PZPCODE ,
  COALESCE(BOOKAMT, 0 ) AS BOOKAMT ,
  COALESCE(PAYKIND, '' ) AS PAYKIND ,
  COALESCE(PAYPASSWORDFLAG, '' ) AS PAYPASSWORDFLAG ,
  COALESCE(ISSAVE, '' ) AS ISSAVE ,
  COALESCE(SAVEDFLAG, '' ) AS SAVEDFLAG ,
  COALESCE(ACCTACCOUNT, '' ) AS ACCTACCOUNT ,
  COALESCE(SAVEACCKIND, '' ) AS SAVEACCKIND ,
  COALESCE(CERTIFICATEKIND, '' ) AS CERTIFICATEKIND ,
  COALESCE(CERTIFICATECODE, '' ) AS CERTIFICATECODE ,
  COALESCE(ZJKIND, '' ) AS ZJKIND ,
  COALESCE(ZJCODE, '' ) AS ZJCODE ,
  COALESCE(ACCTFLAG, '' ) AS ACCTFLAG ,
  COALESCE(JIABANACCT, '' ) AS JIABANACCT ,
  COALESCE(CUSTOMERMGRCODE, '' ) AS CUSTOMERMGRCODE ,
  COALESCE(CHULIFLAG, '' ) AS CHULIFLAG ,
  COALESCE(PSFBATCHSERVER, '' ) AS PSFBATCHSERVER 
 FROM  dw_tdata.FSS_001_CD_ACCOUNT_NOTE_${TX_DATE_YYYYMMDD}) N
LEFT JOIN
 (SELECT 
  CUSTOMERID ,
  ACCOUNTCODE ,
  KINDCODE ,
  SELLFLAG ,
  SEAL ,
  PASSWORDSTATE ,
  CUSTORMERNAME ,
  PASSWORD ,
  RATEFLAG ,
  QXDATE ,
  JEDATE ,
  JELILV ,
  JELIXI ,
  OPENORGAN ,
  OPENTELLER ,
  OPENLSH ,
  OPENDATE ,
  OPENTIME ,
  MODIFYDATE ,
  RATE ,
  RATELEVEL ,
  ACCRUALJE ,
  DELDATE ,
  DELORGAN ,
  DELTELLER ,
  DELLSH ,
  DELHIME ,
  PZPCODE ,
  BOOKAMT ,
  PAYKIND ,
  PAYPASSWORDFLAG ,
  ISSAVE ,
  SAVEDFLAG ,
  ACCTACCOUNT ,
  SAVEACCKIND ,
  CERTIFICATEKIND ,
  CERTIFICATECODE ,
  ZJKIND ,
  ZJCODE ,
  ACCTFLAG ,
  JIABANACCT ,
  CUSTOMERMGRCODE ,
  CHULIFLAG ,
  PSFBATCHSERVER 
 FROM dw_sdata.FSS_001_CD_ACCOUNT_NOTE 
 WHERE END_DT = DATE('2100-12-31') ) T
ON N.ACCOUNTCODE = T.ACCOUNTCODE AND N.OPENORGAN = T.OPENORGAN
WHERE
(T.ACCOUNTCODE IS NULL AND T.OPENORGAN IS NULL)
 OR N.CUSTOMERID<>T.CUSTOMERID
 OR N.KINDCODE<>T.KINDCODE
 OR N.SELLFLAG<>T.SELLFLAG
 OR N.SEAL<>T.SEAL
 OR N.PASSWORDSTATE<>T.PASSWORDSTATE
 OR N.CUSTORMERNAME<>T.CUSTORMERNAME
 OR N.PASSWORD<>T.PASSWORD
 OR N.RATEFLAG<>T.RATEFLAG
 OR N.QXDATE<>T.QXDATE
 OR N.JEDATE<>T.JEDATE
 OR N.JELILV<>T.JELILV
 OR N.JELIXI<>T.JELIXI
 OR N.OPENTELLER<>T.OPENTELLER
 OR N.OPENLSH<>T.OPENLSH
 OR N.OPENDATE<>T.OPENDATE
 OR N.OPENTIME<>T.OPENTIME
 OR N.MODIFYDATE<>T.MODIFYDATE
 OR N.RATE<>T.RATE
 OR N.RATELEVEL<>T.RATELEVEL
 OR N.ACCRUALJE<>T.ACCRUALJE
 OR N.DELDATE<>T.DELDATE
 OR N.DELORGAN<>T.DELORGAN
 OR N.DELTELLER<>T.DELTELLER
 OR N.DELLSH<>T.DELLSH
 OR N.DELHIME<>T.DELHIME
 OR N.PZPCODE<>T.PZPCODE
 OR N.BOOKAMT<>T.BOOKAMT
 OR N.PAYKIND<>T.PAYKIND
 OR N.PAYPASSWORDFLAG<>T.PAYPASSWORDFLAG
 OR N.ISSAVE<>T.ISSAVE
 OR N.SAVEDFLAG<>T.SAVEDFLAG
 OR N.ACCTACCOUNT<>T.ACCTACCOUNT
 OR N.SAVEACCKIND<>T.SAVEACCKIND
 OR N.CERTIFICATEKIND<>T.CERTIFICATEKIND
 OR N.CERTIFICATECODE<>T.CERTIFICATECODE
 OR N.ZJKIND<>T.ZJKIND
 OR N.ZJCODE<>T.ZJCODE
 OR N.ACCTFLAG<>T.ACCTFLAG
 OR N.JIABANACCT<>T.JIABANACCT
 OR N.CUSTOMERMGRCODE<>T.CUSTOMERMGRCODE
 OR N.CHULIFLAG<>T.CHULIFLAG
 OR N.PSFBATCHSERVER<>T.PSFBATCHSERVER
;

--Step3:
UPDATE dw_sdata.FSS_001_CD_ACCOUNT_NOTE P 
SET End_Dt=DATE('${TX_DATE_YYYYMMDD}')
FROM T_175
WHERE P.End_Dt=DATE('2100-12-31')
AND P.ACCOUNTCODE=T_175.ACCOUNTCODE
AND P.OPENORGAN=T_175.OPENORGAN
;

--Step4:
INSERT  INTO dw_sdata.FSS_001_CD_ACCOUNT_NOTE SELECT * FROM T_175;

COMMIT;

ENDOFINPUT

  close(VSQL);

  my $RET_CODE = $? >> 8;

  if ( $RET_CODE == 0 ) {
      return 0;
  }
  else {
      return 1;
  }
}

# ------------ main function ------------
sub main
{
   my $ret;
   open(LOGONFILE_H, "${LOGON_FILE}");
   ${LOGON_STR} = <LOGONFILE_H>;
   close(LOGONFILE_H);
   
   # Get the decoded logon string
   my($user,$passwd) = split(',',${LOGON_STR}); 
   #my $decodepasswd = `${AUTO_HOME}/bin/IceCode.exe -d "$passwd" "$user"`;                     
   #${LOGON_STR} = "|vsql -h 192.168.2.44 -p 5433 -d CPCIMDB_TEST -U ".$user." -w ".$decodepasswd;

   # Call vsql command to load data
   $ret = run_vsql_command();

   print "run_vsql_command() = $ret";
   return $ret;
}

# ------------ program section ------------
if ( $#ARGV < 0 ) {
   print "Usage: [perl 程序名 Control_File] (Control_File format: dir.jobnameYYYYMMDD or sysname_jobname_YYYYMMDD.dir) 
";
   print "
";
   exit(1);
}

# Get the first argument
${CONTROL_FILE} = $ARGV[0];

if (${CONTROL_FILE} =~/[0-9]{8}($|\.)/) {
   ${TX_DATE_YYYYMMDD} = substr($&,0,8);
}
else{
   print "Usage: [perl 程序名 Control_File] (Control_File format: dir.jobnameYYYYMMDD or sysname_jobname_YYYYMMDD.dir) 
";
   print "
";
   exit(1);
}

${TX_MON_DAY_MMDD} = substr(${TX_DATE_YYYYMMDD}, length(${TX_DATE_YYYYMMDD})-4,4);
${TX_DATE} = substr(${TX_DATE_YYYYMMDD}, 0, 4)."-".substr(${TX_DATE_YYYYMMDD}, 4, 2)."-".substr(${TX_DATE_YYYYMMDD}, 6, 2);
open(STDERR, ">&STDOUT");

my $ret = main();

exit($ret);
